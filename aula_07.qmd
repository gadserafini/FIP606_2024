---
title: "Análise Estatística: Estatística inferencial - Parte 2"
author: "Gabriel A D Serafini"
format: html
editor: visual
---

# ANOVA - DIC

## Análise de variância

Para alterar todos os temas do arquivo inteiro

```{r}
library(tidyverse)
theme_set(theme_bw())
```

```{r}
inseticida <- InsectSprays
head(inseticida)
```

Aqui seria a one-away-ANOVA.

```{r}
library(tidyverse)
inseticida |> 
  count(spray)
```

```{r}
library(ggplot2)
inseticida |>
  ggplot(aes(x = spray, y = count))+
  geom_boxplot()+
  geom_jitter()+
  theme_bw()
```

A falta de normalidade é mais "leve" do que a falta de homocedasticidade da variância.

```{r}
m1 <- lm(count ~ spray,
         data = inseticida)
summary(m1)
anova(m1)
m1$residuals
hist(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)
```

```{r}
shapiro.test(m1$residuals)
bartlett.test(count ~ spray,
              data = inseticida)
```

```{r}
library(performance)
check_normality(m1)
check_heteroscedasticity(m1)

library(DHARMa)
plot(simulateResiduals(m1))
```

Quando temos dado de contagem uitliza, geralmente a raiz quadrada.

```{r}
inseticida <- inseticida |>
  mutate(count2 = sqrt(count))
inseticida |>
  ggplot(aes(x = spray, y = count2))+
  geom_boxplot()+
  geom_jitter()+
  theme_bw()
```

```{r}
m2 <- lm(count2 ~ spray,
         data = inseticida)
summary(m2)
anova(m2)
m2$residuals
hist(m2$residuals)
qqnorm(m2$residuals)
qqline(m2$residuals)
```

```{r}
shapiro.test(m2$residuals)
bartlett.test(count2 ~ spray,
              data = inseticida)
```

```{r}
library(DHARMa)
plot(simulateResiduals(m2))

library(performance)
check_normality(m2)
check_heteroscedasticity(m2)
```

Agora os dados atendem a normalidade e homocedasticidade.

emmeans mostra o intervalo de confiança

```{r}
library(emmeans)
m1_medias <- emmeans(m1, ~ spray)
plot(m1_medias)
```

```{r}
library(multcomp)
cld(m1_medias)
```

```{r}
library(emmeans)
m2_medias <- emmeans(m2, ~ spray)
plot(m2_medias)
```

```{r}
library(multcomp)
cld(m2_medias)
```

```{r}
pwpm(m2_medias)
pwpp(m2_medias)

```

```{r}
pairs(m2_medias)
```

podemos aplicar de Box-Cox

```{r}
library(MASS)
b <- boxcox(lm(inseticida$count + 0.1 ~ 1))
lambda <- b$x[which.max(b$y)]
lambda
```

```{r}
inseticida$count3 <- (inseticida$count^lambda-1)/lambda
inseticida$count3
```

Se lambda for igual a 0.5 é igual a raiz quadrada

```{r}
m5 <- lm(count3 ~ spray,
         data = inseticida)
library(DHARMa)
plot(simulateResiduals(m5))

library(performance)
check_normality(m5)
check_heteroscedasticity(m5)
```

Alternativa, usando testes não paramétricos

```{r}
library(agricolae)
print('-=-=-=-=-=-=- DO PRÓPRIO R -=-=-=-=-=-=-')
kruskal.test(count ~ spray,
             data = inseticida)
print('-=-=-=-=-=-=- DO PACOTE AGRICOLAE -=-=-=-=-=-=-')
m3 <- kruskal(inseticida$count,
        inseticida$spray,
        group = TRUE)
m3
```

generalizado é mais bonito, mais moderno, mais aceito.

Alternativa usando GLMs

```{r}
m4 <- glm(count ~spray,
          family = gaussian,
          data = inseticida)
summary(m4)
anova(m4)
library(car)
Anova(m4)
```

Tem que olhar a familia da distribuição olhando os pressupostos.

```{r}
library(DHARMa)
m5 <- glm(count ~spray,
          family = poisson,
          data = inseticida)
summary(m5)
Anova(m5)
plot(simulateResiduals(m5))
```

```{r}
m5_medias <- emmeans(m5, ~ spray,
                     type = 'response')
library(multcomp)
library(multcompView)
cld(m5_medias)
```

Outro conjunto de dados two-way anova - ANOVA fatorial

```{r}
library(gsheet)
li <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=2023059672")

head(li)
```

```{r}
library(ggplot2)
li |>
  ggplot(aes(factor(dose),severity, color = factor(dose)))+
  geom_jitter(width = 0.1)+
  facet_wrap(~treat)+
  theme_bw()
```

```{r}
li |>
  ggplot(aes(treat ,severity, color = factor(dose)))+
  geom_jitter(width = 0.1)
```

Modelo fatoral - Para DIC

```{r}
mf <- lm(severity ~ treat*factor(dose),
         data = li)
mf
anova(mf)
```

```{r}
library(DHARMa)
plot(simulateResiduals(mf))
```

```{r}
library(performance)
check_normality(mf)
check_homogeneity(mf)
```

O cld, do pacote multcomp, coloca as letras.

```{r}
mf_medias <- emmeans(mf, ~ treat | dose)
mf_medias
```

```{r}
library(multcomp)
mf_medias <- emmeans(mf, ~ dose | treat)
cld(mf_medias)
```
