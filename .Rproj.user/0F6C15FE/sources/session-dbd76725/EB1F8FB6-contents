---
title: "Aula 04"
author: "Gabriel A. D. Serafini"
format: html
editor: visual
warming: false
menssage: false
---

## Importando dataset

Utilizando o datapasta, conseguimos copiar de qualquer lugar e coloar o

```{r}
tibble::tribble(
  ~ Posição, Pais, Visitas`1`,          ~Brazil, ~`4,303`,
    2L,     "Mozambique",      43L,
    3L,       "Portugal",      33L,
    4L,  "United States",      23L,
    5L,         "Angola",      19L,
    6L,          "Spain",      16L,
    7L,      "(not set)",      12L,
    8L,       "Colombia",       8L,
    9L,        "Germany",       5L,
   10L,        "Hungary",       5L,
   11L, "United Kingdom",       5L,
   12L,    "Netherlands",       4L,
   13L,        "Ecuador",       3L,
   14L,         "France",       3L,
   15L,          "Chile",       2L,
   16L,       "Paraguay",       2L,
   17L,           "Peru",       2L,
   18L,      "Argentina",       1L,
   19L,        "Austria",       1L,
   20L,        "Bolivia",       1L,
   21L,     "Cape Verde",       1L,
   22L,          "China",       1L,
   23L,          "Egypt",       1L,
   24L,        "Finland",       1L,
   25L,          "India",       1L,
   26L,          "Italy",       1L,
   27L,       "Malaysia",       1L,
   28L,       "Pakistan",       1L,
   29L,         "Poland",       1L,
   30L,      "Singapore",       1L,
   31L,    "Timor-Leste",       1L,
   32L,        "Uruguay",       1L
  )

```

Instalando outros pacotes, o "pak" permite que os dados sejam baixados de outros repositórios.

```{r}
install.packages("pak")
```

```{r}
pak::pkg_install("Icens")
```

```{r}
pak::pkg_install("emdelponte/r4pde")
```

Colando direto do https://r4pde.net/temporal-fitting, o item 10.4. Transformando de formato largo para formato longo. O inverso também pode ser feito usando o

```{r}

library(tidyverse)
pepper <- 
  tribble(
   ~t,  ~`1`,  ~`2`,  ~`3`,
   0,  0.08, 0.001, 0.001,
   7,  0.13,  0.01, 0.001,
  14,  0.78,  0.09,  0.01,
  21,  0.92,  0.25,  0.05,
  28,  0.99,   0.8,  0.18,
  35, 0.995,  0.98,  0.34,
  42, 0.999,  0.99,  0.48,
  49, 0.999, 0.999,  0.74
  ) 
```

annotate também serve para adicionar uma função dentro de um gráfico.

```{r}
library(ggplot2)
pepper |> 
  pivot_longer(2:4,
               names_to = "epidemic",
               values_to = "inc") |> 
  ggplot(aes(t, inc, color = epidemic))+
  geom_point()+
  geom_line()+
  annotate(geom = "text", x = 12, y = 0.75, label = "1")+
  annotate(geom = "text", x = 25, y = 0.75, label = "2")+
  annotate(geom = "text", x = 45, y = 0.75, label = "3")+
  theme(legend.position = "none") #retirar a legenda para não ficar redundante
```

Tabela de contingência, count conta quantas observações existem na variável e exibe na tabela, podemos filtrar colocando mais variáveis.

```{r}
cr <- read_csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")

cr |> 
  count(region, zone)
  
```

Chamamos de tabela de contingência quando cruzamos duas variáveis.

```{r}
library(janitor)
cr |> 
  tabyl(region, zone)
```

```{r}
library(janitor)
cr |> 
  tabyl(zone, region)
```

```{r}
cr |> 
  tabyl(cultivar, region)
```

Esse artifício é interessante para obervações. Para cultivar melhorada há manejo intensivo enquanto que local não tem manejo.

```{r}
cr |> 
  tabyl(cultivar, farm_management)
```

Empilhamento das colunas.

```{r}
cr |> 
  count(farm_management, cultivar) |> 
  ggplot(aes(cultivar, n, fill = farm_management))+
  geom_col()
```

Colunas separadas usa o position = "dodge2"

```{r}
cr |> 
  count(farm_management, cultivar) |> 
  ggplot(aes(cultivar, n, fill = farm_management))+
  geom_col(position = "dodge2")
```

```{r}
library(ggthemes)
cr |> 
  count(farm_management, cultivar) |> 
  ggplot(aes(cultivar, n, fill = farm_management))+
  geom_col(position = "dodge2")+
  scale_fill_calc()+
  theme_bw()+
  theme(strip.text.x = element_blank(),
        legend.position = "top")+ #Tira o nome em cima
  #geom_text(position = position_dodge(width = 0.9))+
  facet_wrap(~cultivar, scales = "free_x")
```

```{r}
library(gsheet)
cr <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?usp=drive_link&ouid=104144100918915406194&rtpof=true&sd=true")
```

```{r}
cr |> 
  group_by(trat) |> 
  summarise(mean_comp = mean(comp)) |> 
  ggplot(aes(trat, mean_comp))+
  geom_col(fill = "steelblue")
```

```{r}
cr |> 
  group_by(trat) |> 
  summarise(mean_comp = mean(comp),
            sd_comp = sd(comp)) |> 
  ggplot(aes(trat, mean_comp))+
  #geom_col(fill = "steelblue", width =0.5)+
  geom_point(size=1)+
  ylim(5, 20)+
  geom_errorbar((aes(ymin = mean_comp - sd_comp ,
                     ymax = mean_comp + sd_comp)))+
  theme_bw()
```
