---
title: "Aula 02"
author: "Gabriel A. D. Serafini"
format: html
editor: visual
---

# ^IMPORTANDO O DATASET^

Iniciamos com a instalação do pacote ec50estimator e a abertura do pacote. Neste pacote foi utilizado o conjunto de dados multi_isolate.

```{r}
library(ec50estimator)
multi_isolate
```

Foi atribuido ao df1 os dados. View(df1) abre uma nova aba que é exibido os dados.

```{r}
df1 <- multi_isolate
View(df1)
```

Instalamos o pacote readxl e o carregamos para lermos os dados diretamente em exel. O comando para ler o arquivo, dentro da pasta do projeto, é o read_excel("nome_do_arquivo").

Uma opção para abrir a planilha escala, uma planilha dentro das demais, é colcar o sheet. O segundo argumento é o nome da aba, logo o sheet é optativo para o segundo parâmetro. Também é possível colocar apenas o número da aba, sem aspas.

```{r}
library(readxl)
df2 <- read_excel("dados-diversos.xlsx")
df21 <- read_excel("dados-diversos.xlsx", sheet = "escala")
#df21 <- read_excel("dados-diversos.xlsx", "escala")
#df21 <- read_excel("dados-diversos.xlsx", 2)
```

Agora utilizamos o pacote tidyverse para abrir os dados.

```{r}
library(tidyverse)
df3 <- read_csv("dados-diversos.csv")
```

Agora vamos utilizar os pacotes gsheet e googlesheet4 para utilizar o banco de dados diretamente do google drive.

Para o gsheet utilizamos o gsheet2tbl para baixar o banco de dados no objeto df4. Pode-se pegar o link direto para aba, tem como pegar o sheet da aba, mas tem que ver como é.

```{r}
library(gsheet)
df4 <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing")

df41 <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing", sheetid = "2") #Tem que ver como faz esse.
```

Para o googlesheets4, o nome da função é read_sheet(""). Ele permite não somente baixar, ele permite escrever também nos arquivos.

```{r}
library(googlesheets4)
df5 <- read_sheet("https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing")
```

Agora, vamos utilizar o ggplot2 para poder fazer um gráfico para análise exploratória das variáveis. Com o geom_point mostra os pontos dentro da mesma variável, mas estes podem estar sobrepostos, para isso utilizamos o geom_jitter para poder desagregar os pontos dentro e observar melhor os dados.

Posso adicionar camadas também, quando adiciono (+) outro parâmetro como o geom_boxplot. A ordem altera como a camada será exposta, se ela ficará acima ou abaixo. O primeiro a ser chamado ficará na camada mais abaixo a próxima ficara acima desta, a próxima que for criada ficara acima das demais e assim por diante.

Para não duplicar o outlier, podemos tirar o outlier com outlier.colour = NA.

Podemos utilizar temas, para atender a um jornal específico, como g2 + theme_bw(), o tema fica preto e branco algo mais clean e científico. Tem outros como o theme_classic.

```{r}
library(ggplot2)
g1 <- df4 |>
  ggplot(aes(trat, comp))+
  geom_point(color = "red", shape = 2, size = 3)
g1 + theme_classic()+
  labs(x = "Tratamento",
       y = "Comprimento",
       title = "Meu primeiro ggplot",
       caption = "Fonte: Dados diversos")

g2 <- df4 |>
  ggplot(aes(trat, comp))+
  geom_boxplot(outlier.colour = NA,
               fill = "green")+
  geom_jitter(width = 0.05,
              color = "blue",
              shape = 3,
              size = 2)
g2 + theme_bw() +
  #ylim(0,20) #Ele faz a mesma coisa que o de baixo
  scale_y_continuous(limits = c(0,20),
                     n.breaks = 5) #n.breaks é o número de quebras, se colocar breaks apenas, fica só a linha correspondente aquele número.
ggsave("plot1.png", bg = "white")
```
