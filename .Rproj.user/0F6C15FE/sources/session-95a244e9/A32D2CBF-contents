---
title: "aula6"
format: html
editor_options: 
  chunk_output_type: console
---

## Inferencial

### Dois grupos independentes

```{r}
library(gsheet)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
```

## Visualiza

```{r}
library(tidyverse)
mg |> 
  ggplot(aes(trat, comp))+
  geom_boxplot()

```

```{r}

mg2 <- mg |> 
  pivot_wider(names_from = trat,
              values_from = comp)

teste1 <- t.test(mg2$control, mg2$Mg2)

shapiro.test(mg2$control)
shapiro.test(mg2$Mg2)
hist(mg2$control)
hist(mg2$Mg2)

qqnorm(mg2$control)
qqline(mg2$control)


qqnorm(mg2$Mg2)
qqline(mg2$Mg2)

var.test(mg2$control, mg2$Mg2)

library(report)
report(teste1)


wilcox.test(mg2$control, mg2$Mg2,
            paired = FALSE)





```

## Dois grupos dependentes

```{r}
escala <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")
```

```{r}
escala |> 
  ggplot(aes(assessment, acuracia))+
  geom_boxplot()
```

```{r}
escala2 <- escala |> 
  select(assessment, rater, acuracia) |> 
  pivot_wider(names_from = assessment,
              values_from = acuracia)
```

## teste 

```{r}
shapiro.test(escala2$Unaided)
shapiro.test(escala2$Aided1)
var.test(escala2$Unaided, escala2$Aided1)

t.test(escala2$Aided1, escala2$Unaided,
       paired = TRUE,
       var.equal = FALSE)
```

## Teste não paramétrico

```{r}
wilcox.test(escala2$Aided1, 
            escala2$Unaided, 
            paired = TRUE)


```

## Três ou mais grupos



```{r}
micelial <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

```

```{r}
micelial |> 
  ggplot(aes(especie, tcm))+
  geom_jitter(width = 0.05)

```

```{r}
m1 <- lm(tcm ~ especie-1, data = micelial)
anova(m1)
summary(m1)
hist(m1$residuals)
shapiro.test(m1$residuals)
bartlett.test(tcm ~ especie, data = micelial)
library(emmeans)
medias1 <- emmeans(m1, ~ especie)
library(multcomp)
library(multcompView)
cld(medias1)

library(DHARMa)
plot(simulateResiduals(m1))

library(performance)
check_normality(m1)
check_heteroscedasticity(m1)
check_model(m1)
```














