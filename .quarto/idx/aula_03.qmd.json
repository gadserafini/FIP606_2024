{"title":"Análise exploratória: Visualização de dados","markdown":{"yaml":{"title":"Análise exploratória: Visualização de dados","author":"Gabriel A. D. Serafini","format":"html","editor":"visual","warming":false,"menssage":false},"headingText":"Visualização de Dados","containsRefs":false,"markdown":"\n\n\nA visualização de dados é um componente essencial na análise de dados, permitindo que você explore, entenda e comunique padrões, tendências e insights de forma eficaz. Utilizando gráficos e tabelas, você pode transformar dados brutos em informações visuais compreensíveis, facilitando a interpretação e tomada de decisões. No R, pacotes como `ggplot2`, `tidyverse` e `patchwork` oferecem ferramentas poderosas para criar visualizações sofisticadas e personalizadas.\n\n## Abrindo e importando Arquivo CSV\n\nPara abrir uma planilha em formato .CSV, utilizamos o pacote `tidyverse`. Este pacote inclui o `readr`, que oferece a função `read_csv` para ler arquivos CSV de maneira eficiente.\n\nCaso hajam dúvidas sobre como abrir e importar arquivos ou os arquivos estejam em outros formatos, sugiro ler a aula \"Importando Datasets\" na aba \"Básico\".\n\n### Configurando o Chunk\n\nUma dica importante é colocar dentro do primeiro chunk, `#| warning: false` e `#| message: false` para não sejam exibidos avisos e mensagens ao renderizar o documento. Se preferir, você pode aplicar essa configuração a todos os chunks colocando no cabeçalho do documento.\n\n```{r}\n#| warning: false\n#| message: false\n#Carregando pacote\nlibrary(tidyverse)\n#Importando arquivo CSV do Git Hub\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n```\n\n### Explorando os dados\n\nExplorar e entender os dados é fundamental para uma boa análise destes dados. A função `head` apresenta um sumário dos dados, com as 6 primeiras linhas e as colunas existentes, com o nome da variável e o tipo da variável. Assim essa função permite um entendimento do que são os seus dados, variáveis e tipo delas.\n\n```{r}\nhead(cr)\n```\n\nOutra opção para visualizar o conjunto de dados é a função `glimpse` que mostra detalhes da tabela, como nome da variável, tipo e uma pequana amostra dos dados desta váriaveis.\n\n```{r}\nglimpse(cr)\n```\n\n### Histogramas e Resumos\n\nOs histogramas ajudam a observar a distribuição dos dados, a função para isso é `geom_histogram()` do pacote `ggplot2`. Podemos plotar um histograma para cada região utilizando o `facet_wrap`.\n\n```{r}\nlibrary(ggplot2)\n# Histogramas de incidência por região\ncr |>\n  ggplot(aes(x = inc))+\n  geom_histogram()+ #Histograma\n  facet_wrap(~region) #Separa por região.\n```\n\nAlém disso, o comando `summary` fornece um sumário estatístico das variáveis. E assim como foi plotado um histograma para cada região, podemos pedir um sumário para cada região ou até por cultivar agrupando utilizando a função `group_by()`.\n\nDentro da função `summarize`, podemos utilizar as funções para obter a média, mediana e desvio padrão através das funções `mean()`, `median()` e `sd()`, respectivamente.\n\n```{r}\n# Sumário dos dados de incidência\nsummary(cr$inc)\n```\n\n```{r}\n# Estatísticas de incidência por região\ncr |>\n  group_by(region) |>\n  summarize(inc_mean = mean(inc),\n            inc_med = median(inc),\n            sd_mean = sd(inc))\n\n```\n\n```{r}\n# Estatísticas de incidência por cultivar\ncr |>\n  group_by(cultivar) |>\n  summarize(inc_mean = mean(inc),\n            inc_med = median(inc),\n            sd_mean = sd(inc))\n```\n\n#### Mas o que é media, mediana e desvio padrão?\n\n-   A **média (mean)** é a soma de todos os valores dividida pelo número total de observações. Ela fornece uma ideia do valor central dos dados.\n\n-   A **mediana** **(Median)** é o valor central de um conjunto de dados ordenado. Se o número de observações for par, é a média dos dois valores centrais. Ela divide os dados em duas metades iguais.\n\n-   O **desvio padrão (Standard Deviation)** mede a dispersão dos valores em relação à média. Um desvio padrão alto indica valores espalhados, enquanto um desvio padrão baixo indica valores próximos à média.\n\n### Gráfico de Dispersão\n\nPara observar a relação entre duas variáveis, podemos utilizar gráficos de dispersão e para observar essa relação pode ser utilizado a função `geom_point()`.\n\n```{r}\ncr |>\n  ggplot(aes(inc, sev2))+\n  geom_point()\n```\n\nPodemos obervar melhor a simetria das variáveis, se a mediana e média dos dados forem mais próximas uma da outra, a curva é simétrica. Se os dados forem não simétricos, podemos observar uma assimetria com cauda para a direita ou a esquerda.\n\n```{r}\nlibrary(ggplot2)\ncr |>\n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(~region) #Separa por região.\n\nsummary(cr$sev2)\n\ncr |>\n  group_by(region) |>\n  summarize(sev_mean = mean(sev2),\n            sev_med = median(sev2),\n            sd_mean = sd(sev2))\n```\n\nAssim, relembrando, a simetria das variáveis pode ser observada através de histogramas e variáveis simétricas terão médias e medianas próximas, enquanto variáveis assimétricas não apresentam médias e medianas próximas e podem mostrar caudas ao ser plotado o histograma como o exemplo acima.\n\nPorém, se formos olhar por cultivar, os dados ficam mais simétrico, como mostrado abaixo:\n\n```{r}\nlibrary(ggplot2)\ncr |>\n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(~cultivar) #Separa por região.\n\nsummary(cr$sev2)\n\ncr |>\n  group_by(cultivar) |>\n  summarize(sev_mean = mean(sev2),\n            sev_med = median(sev2),\n            sd_mean = sd(sev2))\n```\n\n### Personalizando Gráficos\n\nOs gráficos podem ser personalizados de uma infinidade de formas, por exemplo, podemos modificar as cores por região. Lembrando de colocar `fill` na função `ggplot`, se for colocado depois ele irá alterar os gráficos. De mesma forma quando usamos um tema, como o `theme_minimal` usado no exemplo, tem que ver após o `scale_fill_manual`, pois irá sobrescever o tema anterior.\n\n```{r}\nlibrary(ggthemes)\ncr |>\n  ggplot(aes(x = sev2, fill = region))+ #Aqui foi adicionado o fill\n  geom_histogram(color = \"white\")+ #Color aqui é para aborda das barras do histograma.\n  facet_wrap(region ~ cultivar, ncol = 6)+ #ncol coloca o número de colunas por plot\n  #scale_fill_colorblind() #Aqui altera a plheta de cores\n  scale_fill_manual(values = c(\"red\", \"blue\"))+ #escolha manual\n  theme_minimal(base_size = 14)+ #vem depois, se não sobrescreve o scale_fill_manual, aqui também altera a fonte com base_size)\n  theme(legend.position = \"bottom\")+\n  labs(y = \"Frequency\",\n       x = \"Severity (%)\",\n       fill = \"Region\") #Alterou o nome, que estava como o da variável\nggsave(\"cr1.png\", bg =\"white\")\n```\n\n## Criação de subconjunto\n\n### Seleção e Filtro\n\nPara criar subconjuntos de dados, podemos selecionar as colunas com a função `select()` e podemos atribuir este subconjunto a um objeto, como no exemplo o objeto `cr2`. No exemplo foram selecionados as colunas, ou variáveis, fazenda (farm), região (region), cultivar (cultivar) e severidade (sev2).\n\n```{r}\ncr2 <- cr |>\n  select(farm, region, cultivar, sev2) #select é pra colunas\n\ncr2\n```\n\nPodemos também, filtrar os dados usando o `filter()` do pacote `dplyr` em conjunto com a função `select()` para escolher colunas e filtrar as linhas.\n\n```{r}\n#Filtra Oromia\ncr_oromia <- cr |>\n  select(farm, region, cultivar, sev2) |> #select é pra colunas\n  filter(region == \"Oromia\")\ncr_oromia\n#Filtra SNNPR\ncr_pr <- cr |>\n  select(farm, region, cultivar, sev2) |>#select é pra colunas\n  filter(region == \"SNNPR\")\ncr_pr\n```\n\n### Visualizando subconjuntos\n\nAinda podemos gerar gráficos `ggplot2` para cada subconjunto para uma melhor visualização dos dados. No caso utilizamos o boxplot através da função `geom_boxplot()`, também do pacote `ggplot2`.\n\nO **box plot** é uma representação gráfica que mostra a distribuição de um conjunto de dados de maneira resumida, destacando a mediana, os quartis e os outliers. Os componentes de um boxplot são:\n\n1.  **Caixa**:\n\n    -   **Quartil Inferior (Q1)**: Marca os 25% mais baixos dos dados.\n\n    -   **Mediana (Q2)**: O valor central dos dados (50%).\n\n    -   **Quartil Superior (Q3)**: Marca os 75% mais baixos dos dados.\n\n2.  **Whiskers**:\n\n    -   Linhas que se estendem dos quartis até o valor mínimo e máximo dentro de 1.5 vezes o intervalo interquartil (IQR).\n\n3.  **Outliers**:\n\n    -   Pontos fora do alcance dos whiskers, indicando valores atípicos.\n\n```{r}\ncr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2))+\n  geom_boxplot()+\n  labs(title = \"Oromia\",\n       X = \"Cultivar\",\n       y = \"Severity (%)\")\n```\n\n```{r}\ncr_pr |>\n  ggplot(aes(x = cultivar,\n             y = sev2))+\n  geom_boxplot()+\n  labs(title = \"SNNPR\",\n       X = \"Cultivar\",\n       y = \"Severity (%)\")\n```\n\nO box plot é útil para identificar a mediana, a dispersão, a assimetria e os outliers em um conjunto de dados, facilitando a comparação entre diferentes grupos ou categorias.\n\n### Gráficos lado a lado.\n\nGráficos exibidos lado a lado podem auxiliar na percepção de diferença entre dois grupos quando queremos apresenta-las ao leitor de um artigo, por exemplo. Assim, para plotar dois gráficos lado a lado iremos utilizar a biblioteca `patchwork`, sem usar o `face_wrap`.\n\n```{r}\np1 <- cr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")#+ #lembrar de tirar o comentário do +\n  #coord_flip() #rotaciona as coordenadas\n\np2 <- cr_pr |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")#+ #lembrar de tirar o comentário do +\n  coord_flip() #rotaciona as coordenadas\n\nlibrary(patchwork)\n\n(p1 + p2) + #Pode ser + ou |, se colocar / coloca um sobre o outro. Ele funciona como equação, pode ser feito combinação dos gráficos como p1/(p2+p1)\nplot_layout(guides = \"collect\") + #Deixa somente uma legenda\nplot_annotation(tag_levels = \"A\") #Diferencia maiúsculas e minúsculas\n\nggsave(\"patch.png\")\n```\n\nPodemos usar o artifício da função `coord_flip()`, para rotacionar as coordenadas de uma imagem ou das duas, caso fique visualmente mais adequado para a explicação dos dados.\n\n```{r}\np1 <- cr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  theme_few() +\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")+\n  coord_flip() #rotaciona as coordenadas\n\np2 <- cr_pr |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  theme_few() +\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")+\n  coord_flip() #rotaciona as coordenadas\n\n#Não consegui instalar o patchwork\nlibrary(patchwork)\n\n(p1 / p2) + #pode ser + ou |, se colocar / coloca um sobre o outro. Ele funciona como equação, pode ser feito combinação dos gráficos como p1/(p2+p1)\nplot_layout(guides = \"collect\",\n            axes = \"collect\")+ #Deixa somente uma legenda\nplot_annotation(title = \"Coffe rust is Ethiopia\",\n                caption = \"source: Serafini (2024)\",\n                tag_levels = \"A\") #diferencia maiúsculas e minúsculas\n\nggsave(\"patch2.png\", width = 5, height = 4)\n```\n\nOutra opção de combinações que o pacote permite é a sobreposição de gráficos através da função `inset_element()`, onde é inserido o gráfico que se deseja plotar e as dimensões/posições deste na imagem. Este é um excelente artifício para exibir informações gráficas complementares em uma mesma imagem.\n\n```{r}\np1 <- cr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  theme_few() +\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")+\n  coord_flip() #rotaciona as coordenadas\n\np3 <- cr_oromia |>\n  ggplot(aes(x = sev2))+\n  geom_histogram() +\n  labs(y = \"Freq.\",\n       x = \"Severity (%)\")\n\np1 + inset_element(p3, left = 0.6,\n                    bottom = 0.6,\n                    right = 1,\n                    top = 1) +\n  plot_annotation(title = \"Coffe rust is Ethiopia\",\n                caption = \"source: Serafini (2024)\",\n                tag_levels = \"A\") #diferencia maiúsculas e minúsculas\n\nggsave(\"patch3.png\", width = 5, height = 4)\n```\n\nO `patchwork` tem várias possíbilidades interessantes, vale a pena olhar a ajuda (help) deste pacote!\n","srcMarkdownNoYaml":"\n\n# Visualização de Dados\n\nA visualização de dados é um componente essencial na análise de dados, permitindo que você explore, entenda e comunique padrões, tendências e insights de forma eficaz. Utilizando gráficos e tabelas, você pode transformar dados brutos em informações visuais compreensíveis, facilitando a interpretação e tomada de decisões. No R, pacotes como `ggplot2`, `tidyverse` e `patchwork` oferecem ferramentas poderosas para criar visualizações sofisticadas e personalizadas.\n\n## Abrindo e importando Arquivo CSV\n\nPara abrir uma planilha em formato .CSV, utilizamos o pacote `tidyverse`. Este pacote inclui o `readr`, que oferece a função `read_csv` para ler arquivos CSV de maneira eficiente.\n\nCaso hajam dúvidas sobre como abrir e importar arquivos ou os arquivos estejam em outros formatos, sugiro ler a aula \"Importando Datasets\" na aba \"Básico\".\n\n### Configurando o Chunk\n\nUma dica importante é colocar dentro do primeiro chunk, `#| warning: false` e `#| message: false` para não sejam exibidos avisos e mensagens ao renderizar o documento. Se preferir, você pode aplicar essa configuração a todos os chunks colocando no cabeçalho do documento.\n\n```{r}\n#| warning: false\n#| message: false\n#Carregando pacote\nlibrary(tidyverse)\n#Importando arquivo CSV do Git Hub\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n```\n\n### Explorando os dados\n\nExplorar e entender os dados é fundamental para uma boa análise destes dados. A função `head` apresenta um sumário dos dados, com as 6 primeiras linhas e as colunas existentes, com o nome da variável e o tipo da variável. Assim essa função permite um entendimento do que são os seus dados, variáveis e tipo delas.\n\n```{r}\nhead(cr)\n```\n\nOutra opção para visualizar o conjunto de dados é a função `glimpse` que mostra detalhes da tabela, como nome da variável, tipo e uma pequana amostra dos dados desta váriaveis.\n\n```{r}\nglimpse(cr)\n```\n\n### Histogramas e Resumos\n\nOs histogramas ajudam a observar a distribuição dos dados, a função para isso é `geom_histogram()` do pacote `ggplot2`. Podemos plotar um histograma para cada região utilizando o `facet_wrap`.\n\n```{r}\nlibrary(ggplot2)\n# Histogramas de incidência por região\ncr |>\n  ggplot(aes(x = inc))+\n  geom_histogram()+ #Histograma\n  facet_wrap(~region) #Separa por região.\n```\n\nAlém disso, o comando `summary` fornece um sumário estatístico das variáveis. E assim como foi plotado um histograma para cada região, podemos pedir um sumário para cada região ou até por cultivar agrupando utilizando a função `group_by()`.\n\nDentro da função `summarize`, podemos utilizar as funções para obter a média, mediana e desvio padrão através das funções `mean()`, `median()` e `sd()`, respectivamente.\n\n```{r}\n# Sumário dos dados de incidência\nsummary(cr$inc)\n```\n\n```{r}\n# Estatísticas de incidência por região\ncr |>\n  group_by(region) |>\n  summarize(inc_mean = mean(inc),\n            inc_med = median(inc),\n            sd_mean = sd(inc))\n\n```\n\n```{r}\n# Estatísticas de incidência por cultivar\ncr |>\n  group_by(cultivar) |>\n  summarize(inc_mean = mean(inc),\n            inc_med = median(inc),\n            sd_mean = sd(inc))\n```\n\n#### Mas o que é media, mediana e desvio padrão?\n\n-   A **média (mean)** é a soma de todos os valores dividida pelo número total de observações. Ela fornece uma ideia do valor central dos dados.\n\n-   A **mediana** **(Median)** é o valor central de um conjunto de dados ordenado. Se o número de observações for par, é a média dos dois valores centrais. Ela divide os dados em duas metades iguais.\n\n-   O **desvio padrão (Standard Deviation)** mede a dispersão dos valores em relação à média. Um desvio padrão alto indica valores espalhados, enquanto um desvio padrão baixo indica valores próximos à média.\n\n### Gráfico de Dispersão\n\nPara observar a relação entre duas variáveis, podemos utilizar gráficos de dispersão e para observar essa relação pode ser utilizado a função `geom_point()`.\n\n```{r}\ncr |>\n  ggplot(aes(inc, sev2))+\n  geom_point()\n```\n\nPodemos obervar melhor a simetria das variáveis, se a mediana e média dos dados forem mais próximas uma da outra, a curva é simétrica. Se os dados forem não simétricos, podemos observar uma assimetria com cauda para a direita ou a esquerda.\n\n```{r}\nlibrary(ggplot2)\ncr |>\n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(~region) #Separa por região.\n\nsummary(cr$sev2)\n\ncr |>\n  group_by(region) |>\n  summarize(sev_mean = mean(sev2),\n            sev_med = median(sev2),\n            sd_mean = sd(sev2))\n```\n\nAssim, relembrando, a simetria das variáveis pode ser observada através de histogramas e variáveis simétricas terão médias e medianas próximas, enquanto variáveis assimétricas não apresentam médias e medianas próximas e podem mostrar caudas ao ser plotado o histograma como o exemplo acima.\n\nPorém, se formos olhar por cultivar, os dados ficam mais simétrico, como mostrado abaixo:\n\n```{r}\nlibrary(ggplot2)\ncr |>\n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(~cultivar) #Separa por região.\n\nsummary(cr$sev2)\n\ncr |>\n  group_by(cultivar) |>\n  summarize(sev_mean = mean(sev2),\n            sev_med = median(sev2),\n            sd_mean = sd(sev2))\n```\n\n### Personalizando Gráficos\n\nOs gráficos podem ser personalizados de uma infinidade de formas, por exemplo, podemos modificar as cores por região. Lembrando de colocar `fill` na função `ggplot`, se for colocado depois ele irá alterar os gráficos. De mesma forma quando usamos um tema, como o `theme_minimal` usado no exemplo, tem que ver após o `scale_fill_manual`, pois irá sobrescever o tema anterior.\n\n```{r}\nlibrary(ggthemes)\ncr |>\n  ggplot(aes(x = sev2, fill = region))+ #Aqui foi adicionado o fill\n  geom_histogram(color = \"white\")+ #Color aqui é para aborda das barras do histograma.\n  facet_wrap(region ~ cultivar, ncol = 6)+ #ncol coloca o número de colunas por plot\n  #scale_fill_colorblind() #Aqui altera a plheta de cores\n  scale_fill_manual(values = c(\"red\", \"blue\"))+ #escolha manual\n  theme_minimal(base_size = 14)+ #vem depois, se não sobrescreve o scale_fill_manual, aqui também altera a fonte com base_size)\n  theme(legend.position = \"bottom\")+\n  labs(y = \"Frequency\",\n       x = \"Severity (%)\",\n       fill = \"Region\") #Alterou o nome, que estava como o da variável\nggsave(\"cr1.png\", bg =\"white\")\n```\n\n## Criação de subconjunto\n\n### Seleção e Filtro\n\nPara criar subconjuntos de dados, podemos selecionar as colunas com a função `select()` e podemos atribuir este subconjunto a um objeto, como no exemplo o objeto `cr2`. No exemplo foram selecionados as colunas, ou variáveis, fazenda (farm), região (region), cultivar (cultivar) e severidade (sev2).\n\n```{r}\ncr2 <- cr |>\n  select(farm, region, cultivar, sev2) #select é pra colunas\n\ncr2\n```\n\nPodemos também, filtrar os dados usando o `filter()` do pacote `dplyr` em conjunto com a função `select()` para escolher colunas e filtrar as linhas.\n\n```{r}\n#Filtra Oromia\ncr_oromia <- cr |>\n  select(farm, region, cultivar, sev2) |> #select é pra colunas\n  filter(region == \"Oromia\")\ncr_oromia\n#Filtra SNNPR\ncr_pr <- cr |>\n  select(farm, region, cultivar, sev2) |>#select é pra colunas\n  filter(region == \"SNNPR\")\ncr_pr\n```\n\n### Visualizando subconjuntos\n\nAinda podemos gerar gráficos `ggplot2` para cada subconjunto para uma melhor visualização dos dados. No caso utilizamos o boxplot através da função `geom_boxplot()`, também do pacote `ggplot2`.\n\nO **box plot** é uma representação gráfica que mostra a distribuição de um conjunto de dados de maneira resumida, destacando a mediana, os quartis e os outliers. Os componentes de um boxplot são:\n\n1.  **Caixa**:\n\n    -   **Quartil Inferior (Q1)**: Marca os 25% mais baixos dos dados.\n\n    -   **Mediana (Q2)**: O valor central dos dados (50%).\n\n    -   **Quartil Superior (Q3)**: Marca os 75% mais baixos dos dados.\n\n2.  **Whiskers**:\n\n    -   Linhas que se estendem dos quartis até o valor mínimo e máximo dentro de 1.5 vezes o intervalo interquartil (IQR).\n\n3.  **Outliers**:\n\n    -   Pontos fora do alcance dos whiskers, indicando valores atípicos.\n\n```{r}\ncr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2))+\n  geom_boxplot()+\n  labs(title = \"Oromia\",\n       X = \"Cultivar\",\n       y = \"Severity (%)\")\n```\n\n```{r}\ncr_pr |>\n  ggplot(aes(x = cultivar,\n             y = sev2))+\n  geom_boxplot()+\n  labs(title = \"SNNPR\",\n       X = \"Cultivar\",\n       y = \"Severity (%)\")\n```\n\nO box plot é útil para identificar a mediana, a dispersão, a assimetria e os outliers em um conjunto de dados, facilitando a comparação entre diferentes grupos ou categorias.\n\n### Gráficos lado a lado.\n\nGráficos exibidos lado a lado podem auxiliar na percepção de diferença entre dois grupos quando queremos apresenta-las ao leitor de um artigo, por exemplo. Assim, para plotar dois gráficos lado a lado iremos utilizar a biblioteca `patchwork`, sem usar o `face_wrap`.\n\n```{r}\np1 <- cr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")#+ #lembrar de tirar o comentário do +\n  #coord_flip() #rotaciona as coordenadas\n\np2 <- cr_pr |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")#+ #lembrar de tirar o comentário do +\n  coord_flip() #rotaciona as coordenadas\n\nlibrary(patchwork)\n\n(p1 + p2) + #Pode ser + ou |, se colocar / coloca um sobre o outro. Ele funciona como equação, pode ser feito combinação dos gráficos como p1/(p2+p1)\nplot_layout(guides = \"collect\") + #Deixa somente uma legenda\nplot_annotation(tag_levels = \"A\") #Diferencia maiúsculas e minúsculas\n\nggsave(\"patch.png\")\n```\n\nPodemos usar o artifício da função `coord_flip()`, para rotacionar as coordenadas de uma imagem ou das duas, caso fique visualmente mais adequado para a explicação dos dados.\n\n```{r}\np1 <- cr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  theme_few() +\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")+\n  coord_flip() #rotaciona as coordenadas\n\np2 <- cr_pr |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  theme_few() +\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")+\n  coord_flip() #rotaciona as coordenadas\n\n#Não consegui instalar o patchwork\nlibrary(patchwork)\n\n(p1 / p2) + #pode ser + ou |, se colocar / coloca um sobre o outro. Ele funciona como equação, pode ser feito combinação dos gráficos como p1/(p2+p1)\nplot_layout(guides = \"collect\",\n            axes = \"collect\")+ #Deixa somente uma legenda\nplot_annotation(title = \"Coffe rust is Ethiopia\",\n                caption = \"source: Serafini (2024)\",\n                tag_levels = \"A\") #diferencia maiúsculas e minúsculas\n\nggsave(\"patch2.png\", width = 5, height = 4)\n```\n\nOutra opção de combinações que o pacote permite é a sobreposição de gráficos através da função `inset_element()`, onde é inserido o gráfico que se deseja plotar e as dimensões/posições deste na imagem. Este é um excelente artifício para exibir informações gráficas complementares em uma mesma imagem.\n\n```{r}\np1 <- cr_oromia |>\n  ggplot(aes(x = cultivar,\n             y = sev2,\n             fill = cultivar))+\n  geom_boxplot()+\n  theme_few() +\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")+\n  coord_flip() #rotaciona as coordenadas\n\np3 <- cr_oromia |>\n  ggplot(aes(x = sev2))+\n  geom_histogram() +\n  labs(y = \"Freq.\",\n       x = \"Severity (%)\")\n\np1 + inset_element(p3, left = 0.6,\n                    bottom = 0.6,\n                    right = 1,\n                    top = 1) +\n  plot_annotation(title = \"Coffe rust is Ethiopia\",\n                caption = \"source: Serafini (2024)\",\n                tag_levels = \"A\") #diferencia maiúsculas e minúsculas\n\nggsave(\"patch3.png\", width = 5, height = 4)\n```\n\nO `patchwork` tem várias possíbilidades interessantes, vale a pena olhar a ajuda (help) deste pacote!\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"aula_03.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":{"light":"pulse"},"title":"Análise exploratória: Visualização de dados","author":"Gabriel A. D. Serafini","warming":false,"menssage":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}