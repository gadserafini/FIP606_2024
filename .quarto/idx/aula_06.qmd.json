{"title":"Análise Estatística: Estatística inferencial - Parte 1","markdown":{"yaml":{"title":"Análise Estatística: Estatística inferencial - Parte 1","author":"Gabriel A. D. Serafini","format":"html","editor":"visual"},"headingText":"Estatística Inferencial","containsRefs":false,"markdown":"\n\n\n## Importando os dados\n\nIniciaremos este tópico importando o dataset que iremos trabalhar.\n\n```{r}\nlibrary(gsheet)\nmg = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n```\n\nO pacote `gsheet` permite importar dados diretamente de uma planilha do Google Sheets. A função `gsheet2tbl` converte a planilha em um tibble (um tipo de data frame otimizado).\n\nCaso haja dúvidas, existe um tópico específico tratando da importação dos dados neste site.\n\n## Visualização dos dados\n\n### Boxplot\n\nUm boxplot, também conhecido como diagrama de caixa, é uma representação gráfica que resume a distribuição de um conjunto de dados baseado em cinco estatísticas: mínimo, primeiro quartil (Q1), mediana (Q2), terceiro quartil (Q3) e máximo e também pode destacar outliers.\n\nO pacote `tidyverse` engloba diversos pacotes, como o `ggplot2` que é uma das bibliotecas mais populares para visualização de dados em R. Com esta biblioteca podemos utilizar a função `geom_boxplot` que cria um boxplot. Podemos aplicar temas aplicando um tema preto e branco ao gráfico, melhorando a clareza visual com a função `theme_bw()`.\n\nUm exemplo de boxplot pode ser plotado utilizando os dados já carregados acima:\n\n```{r}\nlibrary(tidyverse)\nmg |> \n  ggplot(aes(trat, comp))+\n  geom_boxplot()+\n  theme_bw()\n```\n\nO boxplot é útil para visualizar a distribuição dos dados, incluindo a mediana, os quartis e possíveis outliers. O boxplot ainda pode ajuda a identificar a dispersão dos dados e a presença de possíveis valores atípicos. Além disso podemos identificar a diferença entre dois tratamentos usando um boxplot, começando pela observação a linha mediana dentro de cada caixa, que representa o valor central dos dados.\n\nComo as medianas estão em diferentes níveis, isso sugere que as medianas dos tratamentos são diferentes. Em seguida, examinamos a posição e a extensão das caixas (intervalo interquartil, IQR), e como as caixas dos dois tratamentos não se sobrepõem, as distribuições dos tratamentos são similares. Menos sobreposição indica uma maior probabilidade de diferença significativa entre os tratamentos.\n\n## Teste t - Dados Independentes\n\nO **Teste t** é utilizado para comparar as médias de duas amostras, enquanto o **Teste F**, que veremos mais abaixo, seria para três ou mais. Ele verifica se a diferença entre as médias é estatisticamente significativa, ou seja, se é provável que as diferenças observadas se devam ao acaso.\n\n### Preparação dos Dados\n\nNo nosso exemplo, precisamos separar os dados para isso devemos passar do formato longo para o formato largo. A função `pivot_wider` transforma os dados de formato longo para formato largo. No formato longo, cada linha é uma observação única, enquanto no formato largo, cada linha representa um grupo de observações.\n\n```{r}\nmg2 <- mg |> \n  pivot_wider(names_from = trat, values_from = comp)\n```\n\n### Realizando o Teste t\n\nA função `t.test()`,como o próprio nomde diz, realiza o teste t, que compara as médias de duas amostras para determinar se elas são estatisticamente diferentes. Um p-valor baixo (geralmente \\< 0,05) indica que as médias são significativamente diferentes.\n\n```{r}\n# Teste t\nteste1 <- t.test(mg2$Mg2, mg2$control)\nteste1\n```\n\n#### Hipótese Nula (H0) e Hipótese Alternativa (H1)\n\nA hipótese H0, também conhecida como hipótese nula, é uma afirmação inicial que presume que não há efeito ou diferença significativa em um estudo ou experimento. É uma posição de \"inocência\" até que evidências suficientes provem o contrário. Na prática estatística, a hipótese nula é formulada para ser testada e possivelmente rejeitada em favor de uma hipótese alternativa (H1), que sugere a existência de um efeito ou diferença.\n\nNo caso do exemplo acima, nossa hiótese é de que as médias dos tratamentos não diferem entre si. Como o p-valor ou p-value foi menor do que 0,05, rejeitamos nossa hipótese nula (H0) e aceitamos a hípotese alternativa (H1), que no caso as médias dos tratamentos diferem entre si.\n\n### Teste de Normalidade\n\nA função `shapiro.test()`, testa a hipótese de que os dados vêm de uma distribuição normal. A normalidade dos dados é um pressuposto importante para a validade do teste t.\n\n```{r}\nshapiro.test(mg2$control)\nshapiro.test(mg2$Mg2)\n```\n\nUm p-valor alto indica que os dados são normalmente distribuídos, como ocorre no caso acima.\n\n### Histograma\n\nA função `hist()` é utilizada para criar um histograma, que mostra a distribuição dos dados. É útil para visualizar a forma da distribuição e identificar se ela é aproximadamente normal.\n\n```{r}\n# Histograma\nhist(mg2$control)\nhist(mg2$Mg2)\n```\n\nO histograma do tratamento controle segue nitidamente uma distribuição Gaussiana, enquanto a distribuição do tratamento Mg2 não segue uma distribuição normal.\n\n### Teste de Homogeneidade de Variância\n\nA função `var.test()` realiza a comparação das variâncias de duas amostras para verificar se são homogeneamente distribuídas. A homogeneidade de variância é outro pressuposto importante para os testes estatísticos.\n\n```{r}\n#Teste de homogêneidade de variância\nvar.test(mg2$control, mg2$Mg2) #Se a variância não for homogênea tem que informar, var.equal = FALSE\n```\n\nUm p-valor alto indica que as variâncias são homogêneas, como ocorre no exemplo acima (p-value = 0.5698).\n\n### QQ Plot\n\nA função `qqplot()` é uma ferramenta valiosa para comparar distribuições de dados. Ela é amplamente usada para verificar a normalidade de uma amostra e para comparar distribuições de viariância de duas amostras diferentes. A interpretação do QQ plot é baseada no quão bem os pontos seguem uma linha reta, com desvios significativos indicando diferenças entre as distribuições.\n\n```{r}\nqqplot(mg2$control, mg2$Mg2)\n```\n\n### Relatório\n\nO `reaport()` gera um relatório detalhado dos resultados do teste t pareado.\n\n```{r}\nlibrary(report)\nreport(teste1)\n```\n\nUtilizamos o teste t para sabermos se há diferença entre as médias, o p-valor foi \\<0,05, porém temos que calcular se as médias possuem normalidade, para saber se podemos confiar no teste t. Segundo o teste de shapiro-wilk os dados seguem normalidade (não rejeita Ho), quando plotamos o histograma dos dados podemos observar que segue uma distribuição normal.\n\nOutra observação que devemos fazer é se as variáveis são homogênas usando o teste F. E neste caso as variâncias são homogêneas (não rejeita Ho) e o boxplot já dava esses indicativos visuais. Podemos fazer também o grafico QQ Plot para mostras a variância dos dados, como foi realizado acima.\n\n## Teste t - Dados Dependentes\n\nPara dados dependentes, realiza-se um teste t pareado. Esse teste é usado quando as amostras são dependentes, como medições antes e depois do tratamento no mesmo grupo de indivíduos. Para fazer o teste t pareado tem que colocar o argumento `paired = TRUE` no código.\n\n### Importação e Visualização\n\nInicialmente devemos importar e visualizar os dados, lembrando que `gsheet()` importa dados do Google Sheets e `ggplot2` e `geom_boxplot()` cria um boxplot para visualização.\n\n```{r}\nlibrary(gsheet)\nescala = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1729131173\")\n\nescala |> \n  ggplot(aes(assessment, acuracia))+\n  geom_boxplot()+\n  theme_bw()\n```\n\nO boxplot, nos indica que há diferença entre os tratamentos, caso haja dúvidas sobre a interpretação há um tópico acima sobre a interpretação do boxplot.\n\n### Preparação dos Dados\n\nAntes de realizarmos os testes é necessário preparar os dados, selecionando as colunas específicas através da função `select()`. Além disso devemos transformar os dados de formato longo para formato largo pela função `pivot_wider()`.\n\n```{r}\nescala2 <- escala |> \n  select(assessment, rater, acuracia) |> \n  pivot_wider(names_from = assessment,\n              values_from = acuracia)\n```\n\n### Realizando o Teste t Pareado\n\nPara o teste t pareado, temos que lembrar de colocar o argumento `paried = TRUE`, que por *default* ele vem como *FALSE*, este argumento indica que as amostras são pareadas. Assim, a função `t.test(paired = TRUE)` realiza um teste t pareado, que é usado quando as amostras são dependentes.\n\n```{r}\n#Tete t pareado\nteste2 <- t.test(escala2$Aided1, escala2$Unaided, paried = TRUE, var.equal = FALSE)\n#Obs.: Os dados foram alterados para dar não paramétrico.\nteste2\n```\n\nOs dados foram alterados para que pudessemos fazer uma análise não paramétrica. Portanto, pelo teste de homogeneidade, os dados não possuem homogêneidade de variância e assim temos que colocar `var.equal = FALSE`. A função `var.equal = FALSE` indica que as variâncias das duas amostras não são iguais, ajustando o cálculo do teste t para essa condição.\n\nO p-valor pelo teste t pareado é igaual a 0.001354, logo. com o p-valor \\< 0.05, rejeitase H0 a 5% de probabiliade pelo teste t pareado.\n\n### Teste de Normalidade\n\nUsamos a função `shapiro.test()`, que testa a normalidade dos dados em cada grupo. Para mais detalhes sobre normalidade, veja nos tópicos acima.\n\n```{r}\n#Teste de normalidade\nshapiro.test(escala2$Unaided)\nshapiro.test(escala2$Aided1)\n```\n\nSegundo o teste de normalidade de Shapiro-Wilk, a variável *Unaided* não segue uma distribuição normal (p-valor \\< 0.05), enquanto a variável *Aided1* apresentou normalidade (p-valor \\> 0.05).\n\n### Histograma\n\nA função `hist()` cria histogramas para visualizar a distribuição dos dados.\n\n```{r}\n#Histograma\nhist(escala2$Unaided)\nhist(escala2$Aided1)\n```\n\nObservando os plots dos histogramas, ambas as variáveis *Unaided* e *Aided*, não possuem uma distribuição normal. Apesar da variável *Aided1* ter apresentado normalidade (p-valor \\> 0.05) pelo teste de Shapiro-Wilk. Em experimentos, costuma-se considerar os testes em detrimento dos gráficos.\n\n### Teste de Homogeneidade de Variância\n\nA função `var.test()` compara as variâncias dos dois grupos.\n\n```{r}\n#Teste de homogêneidade de variância\nvar.test(escala2$Unaided, escala2$Aided1) #Se a variância não for homogênea tem que informar, var.equal = FALSE\n#qqplot(escala2$control, escala2$Aided1)\n```\n\nPara o nosso exemplo, utilizamos o teste F para comparação de duas variâncias, que apresentou um p-valor \\< 0.05, ou seja, rejeita-se H0 e aceita-se H1, as variâncias não apresentam homogeneidade pelo teste F a 5% de probabilidade.\n\n### Relatório\n\nComo já mencionado, o R possui o pacote `report`, que por sua vez possui a função `report()`, que faz um sumário do teste armazenado em um objeto. No nosso exemplo:\n\n```{r}\nreport(teste2)\n```\n\n### Teste Não Paramétrico\n\nQuando os dados não atendem aos pressupostos do teste t (normalidade e homogeneidade de variância), pode-se usar uma alternativa não paramétrica, como o teste de Wilcoxon que é um teste equivalente ao teste t, mas não assume uma distribuição normal dos dados.\n\nPara isso, utilizamos a função `wilcox.test()`, uma função nativa do R. Esta função realiza o teste de Wilcoxon, entretanto a a necessidade de colocar o parametro *paired = TRUE* para amostras pareadas.\n\n```{r}\nteste3 <- wilcox.test(escala2$Aided1,\n            escala2$Unaided,\n            paired = TRUE) #Lembrar que é dado pareado, logo paired = TRUE\nteste3\n```\n\n## Teste f para Três ou Mais Grupos\n\nPara comparar três ou mais grupos, utiliza-se o teste f através da ANOVA (Análise de Variância), que verifica se há diferenças significativas entre as médias de mais de dois grupos.\n\n### Importação e Visualização\n\nSempre inciamos importando os dados, para maiores informações sobre como importar os dados, verifique o tópico específico. O mesmo é valido para o boxplot.\n\n```{r}\nmicelial = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827\")\n\nmicelial |> \n  ggplot(aes(especie, tcm))+\n  geom_boxplot()+\n  theme_bw()\n```\n\nAnálisando o box-plot, ao menos dois tratamentos diferem das demais, *Fasi* e *Fgra*. Entretanto, é necessário que sejam feitos testes para saber realmente há diferença e se seguem os pressupostos de normalidade e homogeneidade.\n\n### Realizando ANOVA\n\nPara realizarmos a ANOVA, podemos usar a função `aov()` ou `lm()`. Neste exemplo usaremos a função `lm()`, que cria um modelo linear que relaciona a variável de interesse (`tcm`) com os grupos (`especie`). Ao colocarmos *espécie -1* já é calculada a média da estimativa.\n\nA função `anova()` realiza a análise de variância (ANOVA), que compara as médias de três ou mais grupos para determinar se há diferenças significativas.\n\n```{r}\nm1 <- lm(tcm ~ especie -1, data = micelial)\nanova(m1)\nshapiro.test(m1$residuals)\nbartlett.test(tcm ~ especie, data = micelial)\n```\n\nSegundo os testes de Shapiro-Wilk, e Bartelett os dados apresentam normalidade e homogeneidade de variância, respectivamente, a 5% de probailidade (p-valor \\> 0.05). Segundo a ANOVA, ao menos uma das médias difere das demais pelo teste F ao nível de 5% de probabilidade (p-valor \\> 0.05).\n\n#### Análise do Modelo\n\nA função `summary()` fornece um resumo estatístico do modelo linear, incluindo coeficientes, erros padrão, valores t e p-valores.\n\n```{r}\nsummary(m1)\n```\n\nOs resultados indicam que todas as espécies têm médias estimadas de *`tcm`* significativamente diferentes de zero (p \\< 0.001 para todas). O modelo ajustado explica 99.1% da variabilidade total dos dados (`R-squared` = 0.991).\n\nA ANOVA sugere que há diferenças significativas nas médias de `tcm` entre as espécies (p \\< 2.2e-16). O modelo apresenta um bom ajuste com um erro padrão residual baixo (0.1368) e coeficientes altamente significativos.\n\n### Comparação das Médias\n\nPara comparar as médias dos grupos, usamos o pacote `emmeans`. Este pacote calcula as estimativas marginais dos efeitos e facilita a comparação entre os grupos.\n\nO pacote `multcomp` é utilizado para realizar comparações múltiplas entre as médias dos grupos. A função `cld()` gera diferenciadores compactos que indicam quais médias são significativamente diferentes entre si.\n\n```{r}\nlibrary(emmeans)\nmedias1 <- emmeans(m1, ~ especie)\nmedias1\n\nlibrary(multcomp)\nlibrary(multcompView)\ncld(medias1)\n```\n\nSegundo a tabela acima foram formados 3 grupos, a espécie *Fgra* diferenciou-se das demais com menor *tcm*, enquanto *Faus*, *Fcor* e *Fmer* formaram outro grupo, entretanto *Fmer* e *Fasi* não diferiram entre si, formando um grupo.\n\n### Diagnóstico do Modelo\n\nUtilizamos o pacote `DHARMa` para gerar gráficos de resíduos simulados e verificar a adequação do modelo. Este pacote possui a função `simulateResiduals()`, que simula resíduos para verificar a adequação do modelo. A exibição é realizada pela função `plot()`, que plota os resíduos simulados para diagnóstico visual.\n\n```{r}\nlibrary(DHARMa)\nplot(simulateResiduals(m1))\n```\n\nOs gráficos de resíduos fornecidos pelo pacote `DHARMa` ajudam a diagnosticar possíveis problemas com o modelo. O gráfico de quantil-quantil (*QQ plot*) compara os resíduos observados com os esperados sob uma distribuição normal.\n\nAinda no gráfico, os pontos devem estar próximos da linha diagonal. Se estiverem, isso indica que os resíduos são aproximadamente normais. No gráfico do exemplo, os pontos seguem de perto a linha, indicando que os resíduos são aproximadamente normais.\n\nO gráfico *Residuals vs. Predicted* mostra os resíduos plotados contra os valores preditos. Uma distribuição aleatória dos pontos ao redor da linha horizontal (em zero) sugere que não há padrões sistemáticos nos resíduos.\n\nNo gráfico do exemplo, os pontos estão bem distribuídos, sugerindo que não há problemas significativos de heteroscedasticidade ou não-linearidade.\n\nAlém disso, o pacote DHARMa fornece análise de normalidade e homogeneidade e plota junto ao seu respectivo gráfico.\n\nApós, verificamos os pressupostos do modelo com o pacote `performance`. A função `check_normality()` verifica a normalidade dos resíduos, `check_heteroscedasticity()` verifica a presença de heteroscedasticidade e a função `check_model()` realiza verificações abrangentes do modelo, incluindo normalidade, heteroscedasticidade e outros diagnósticos.\n\n```{r}\nlibrary(performance)\ncheck_normality(m1)\ncheck_heteroscedasticity(m1)\ncheck_model(m1)\n```\n\nO gráfico*Posterior Predictive Check* compara a densidade dos dados observados com as densidades preditas pelo modelo. As linhas azuis representam as predições do modelo e a linha verde representa os dados observados. Se as linhas preditas (azuis) estiverem próximas à linha dos dados observados (verde), isso sugere que o modelo se ajusta bem aos dados. No gráfico do exemplo, as linhas azuis estão próximas à linha verde, indicando um bom ajuste do modelo.\n\nO gráfico *Linearity* (Linearidade) exibe resíduos padronizados versus valores ajustados. A linha de referência deve ser plana e horizontal e os pontos devem estar distribuídos aleatoriamente ao redor da linha horizontal. No gráfico do exemplo, os pontos parecem estar distribuídos aleatoriamente, indicando que o pressuposto de linearidade é atendido.\n\nO gráfico *Homogeneity of Varianc*e (Homoscedasticidade) exibe os resíduos padronizados versus valores ajustados. A linha de referência também deve ser plana e horizontal e os resíduos devem ter variância constante em todos os níveis de valores ajustados. No gráfico do exemplo, os pontos estão distribuídos de maneira uniforme ao redor da linha, indicando homoscedasticidade.\n\nO gráfico *Normality of Residuals* (Normalidade dos Resíduos) exibe o *QQ plot* dos resíduos padronizados. Os pontos devem estar alinhados ao longo da linha diagonal, se os pontos seguem a linha diagonal, isso indica que os resíduos são normalmente distribuídos. No gráfico do exemplo, os pontos estão relativamente alinhados à linha, indicando que os resíduos são aproximadamente normais.\n\nPor fim, o gráfico *Influential Observations* (Observações Influentes) exibe os resíduos padronizados versus leverage (hi). As observações devem estar dentro das linhas de contorno, este gráfico ajuda a identificar observações que têm uma influência desproporcional no ajuste do modelo. No gráfico do exemplo, a maioria dos pontos está dentro das linhas de contorno, indicando que não há observações influentes significativas.\n\n#### Conclusão\n\nOs gráficos de diagnóstico do exemplo indicam que o modelo ajustado atende aos pressupostos necessários para uma análise de regressão válida:\n\n1.  **Linearidade**: O pressuposto de linearidade é atendido, pois os resíduos são distribuídos aleatoriamente ao redor da linha horizontal.\n\n2.  **Homoscedasticidade**: A variância dos resíduos é constante, conforme indicado pela distribuição uniforme dos pontos.\n\n3.  **Normalidade dos Resíduos**: Os resíduos são aproximadamente normais, conforme indicado pelo QQ plot.\n\n4.  **Observações Influentes**: Não há observações influentes significativas que possam distorcer os resultados do modelo.\n\nEsses resultados sugerem que o modelo é bem ajustado e que as inferências feitas a partir dele são confiáveis.\n","srcMarkdownNoYaml":"\n\n# Estatística Inferencial\n\n## Importando os dados\n\nIniciaremos este tópico importando o dataset que iremos trabalhar.\n\n```{r}\nlibrary(gsheet)\nmg = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n```\n\nO pacote `gsheet` permite importar dados diretamente de uma planilha do Google Sheets. A função `gsheet2tbl` converte a planilha em um tibble (um tipo de data frame otimizado).\n\nCaso haja dúvidas, existe um tópico específico tratando da importação dos dados neste site.\n\n## Visualização dos dados\n\n### Boxplot\n\nUm boxplot, também conhecido como diagrama de caixa, é uma representação gráfica que resume a distribuição de um conjunto de dados baseado em cinco estatísticas: mínimo, primeiro quartil (Q1), mediana (Q2), terceiro quartil (Q3) e máximo e também pode destacar outliers.\n\nO pacote `tidyverse` engloba diversos pacotes, como o `ggplot2` que é uma das bibliotecas mais populares para visualização de dados em R. Com esta biblioteca podemos utilizar a função `geom_boxplot` que cria um boxplot. Podemos aplicar temas aplicando um tema preto e branco ao gráfico, melhorando a clareza visual com a função `theme_bw()`.\n\nUm exemplo de boxplot pode ser plotado utilizando os dados já carregados acima:\n\n```{r}\nlibrary(tidyverse)\nmg |> \n  ggplot(aes(trat, comp))+\n  geom_boxplot()+\n  theme_bw()\n```\n\nO boxplot é útil para visualizar a distribuição dos dados, incluindo a mediana, os quartis e possíveis outliers. O boxplot ainda pode ajuda a identificar a dispersão dos dados e a presença de possíveis valores atípicos. Além disso podemos identificar a diferença entre dois tratamentos usando um boxplot, começando pela observação a linha mediana dentro de cada caixa, que representa o valor central dos dados.\n\nComo as medianas estão em diferentes níveis, isso sugere que as medianas dos tratamentos são diferentes. Em seguida, examinamos a posição e a extensão das caixas (intervalo interquartil, IQR), e como as caixas dos dois tratamentos não se sobrepõem, as distribuições dos tratamentos são similares. Menos sobreposição indica uma maior probabilidade de diferença significativa entre os tratamentos.\n\n## Teste t - Dados Independentes\n\nO **Teste t** é utilizado para comparar as médias de duas amostras, enquanto o **Teste F**, que veremos mais abaixo, seria para três ou mais. Ele verifica se a diferença entre as médias é estatisticamente significativa, ou seja, se é provável que as diferenças observadas se devam ao acaso.\n\n### Preparação dos Dados\n\nNo nosso exemplo, precisamos separar os dados para isso devemos passar do formato longo para o formato largo. A função `pivot_wider` transforma os dados de formato longo para formato largo. No formato longo, cada linha é uma observação única, enquanto no formato largo, cada linha representa um grupo de observações.\n\n```{r}\nmg2 <- mg |> \n  pivot_wider(names_from = trat, values_from = comp)\n```\n\n### Realizando o Teste t\n\nA função `t.test()`,como o próprio nomde diz, realiza o teste t, que compara as médias de duas amostras para determinar se elas são estatisticamente diferentes. Um p-valor baixo (geralmente \\< 0,05) indica que as médias são significativamente diferentes.\n\n```{r}\n# Teste t\nteste1 <- t.test(mg2$Mg2, mg2$control)\nteste1\n```\n\n#### Hipótese Nula (H0) e Hipótese Alternativa (H1)\n\nA hipótese H0, também conhecida como hipótese nula, é uma afirmação inicial que presume que não há efeito ou diferença significativa em um estudo ou experimento. É uma posição de \"inocência\" até que evidências suficientes provem o contrário. Na prática estatística, a hipótese nula é formulada para ser testada e possivelmente rejeitada em favor de uma hipótese alternativa (H1), que sugere a existência de um efeito ou diferença.\n\nNo caso do exemplo acima, nossa hiótese é de que as médias dos tratamentos não diferem entre si. Como o p-valor ou p-value foi menor do que 0,05, rejeitamos nossa hipótese nula (H0) e aceitamos a hípotese alternativa (H1), que no caso as médias dos tratamentos diferem entre si.\n\n### Teste de Normalidade\n\nA função `shapiro.test()`, testa a hipótese de que os dados vêm de uma distribuição normal. A normalidade dos dados é um pressuposto importante para a validade do teste t.\n\n```{r}\nshapiro.test(mg2$control)\nshapiro.test(mg2$Mg2)\n```\n\nUm p-valor alto indica que os dados são normalmente distribuídos, como ocorre no caso acima.\n\n### Histograma\n\nA função `hist()` é utilizada para criar um histograma, que mostra a distribuição dos dados. É útil para visualizar a forma da distribuição e identificar se ela é aproximadamente normal.\n\n```{r}\n# Histograma\nhist(mg2$control)\nhist(mg2$Mg2)\n```\n\nO histograma do tratamento controle segue nitidamente uma distribuição Gaussiana, enquanto a distribuição do tratamento Mg2 não segue uma distribuição normal.\n\n### Teste de Homogeneidade de Variância\n\nA função `var.test()` realiza a comparação das variâncias de duas amostras para verificar se são homogeneamente distribuídas. A homogeneidade de variância é outro pressuposto importante para os testes estatísticos.\n\n```{r}\n#Teste de homogêneidade de variância\nvar.test(mg2$control, mg2$Mg2) #Se a variância não for homogênea tem que informar, var.equal = FALSE\n```\n\nUm p-valor alto indica que as variâncias são homogêneas, como ocorre no exemplo acima (p-value = 0.5698).\n\n### QQ Plot\n\nA função `qqplot()` é uma ferramenta valiosa para comparar distribuições de dados. Ela é amplamente usada para verificar a normalidade de uma amostra e para comparar distribuições de viariância de duas amostras diferentes. A interpretação do QQ plot é baseada no quão bem os pontos seguem uma linha reta, com desvios significativos indicando diferenças entre as distribuições.\n\n```{r}\nqqplot(mg2$control, mg2$Mg2)\n```\n\n### Relatório\n\nO `reaport()` gera um relatório detalhado dos resultados do teste t pareado.\n\n```{r}\nlibrary(report)\nreport(teste1)\n```\n\nUtilizamos o teste t para sabermos se há diferença entre as médias, o p-valor foi \\<0,05, porém temos que calcular se as médias possuem normalidade, para saber se podemos confiar no teste t. Segundo o teste de shapiro-wilk os dados seguem normalidade (não rejeita Ho), quando plotamos o histograma dos dados podemos observar que segue uma distribuição normal.\n\nOutra observação que devemos fazer é se as variáveis são homogênas usando o teste F. E neste caso as variâncias são homogêneas (não rejeita Ho) e o boxplot já dava esses indicativos visuais. Podemos fazer também o grafico QQ Plot para mostras a variância dos dados, como foi realizado acima.\n\n## Teste t - Dados Dependentes\n\nPara dados dependentes, realiza-se um teste t pareado. Esse teste é usado quando as amostras são dependentes, como medições antes e depois do tratamento no mesmo grupo de indivíduos. Para fazer o teste t pareado tem que colocar o argumento `paired = TRUE` no código.\n\n### Importação e Visualização\n\nInicialmente devemos importar e visualizar os dados, lembrando que `gsheet()` importa dados do Google Sheets e `ggplot2` e `geom_boxplot()` cria um boxplot para visualização.\n\n```{r}\nlibrary(gsheet)\nescala = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1729131173\")\n\nescala |> \n  ggplot(aes(assessment, acuracia))+\n  geom_boxplot()+\n  theme_bw()\n```\n\nO boxplot, nos indica que há diferença entre os tratamentos, caso haja dúvidas sobre a interpretação há um tópico acima sobre a interpretação do boxplot.\n\n### Preparação dos Dados\n\nAntes de realizarmos os testes é necessário preparar os dados, selecionando as colunas específicas através da função `select()`. Além disso devemos transformar os dados de formato longo para formato largo pela função `pivot_wider()`.\n\n```{r}\nescala2 <- escala |> \n  select(assessment, rater, acuracia) |> \n  pivot_wider(names_from = assessment,\n              values_from = acuracia)\n```\n\n### Realizando o Teste t Pareado\n\nPara o teste t pareado, temos que lembrar de colocar o argumento `paried = TRUE`, que por *default* ele vem como *FALSE*, este argumento indica que as amostras são pareadas. Assim, a função `t.test(paired = TRUE)` realiza um teste t pareado, que é usado quando as amostras são dependentes.\n\n```{r}\n#Tete t pareado\nteste2 <- t.test(escala2$Aided1, escala2$Unaided, paried = TRUE, var.equal = FALSE)\n#Obs.: Os dados foram alterados para dar não paramétrico.\nteste2\n```\n\nOs dados foram alterados para que pudessemos fazer uma análise não paramétrica. Portanto, pelo teste de homogeneidade, os dados não possuem homogêneidade de variância e assim temos que colocar `var.equal = FALSE`. A função `var.equal = FALSE` indica que as variâncias das duas amostras não são iguais, ajustando o cálculo do teste t para essa condição.\n\nO p-valor pelo teste t pareado é igaual a 0.001354, logo. com o p-valor \\< 0.05, rejeitase H0 a 5% de probabiliade pelo teste t pareado.\n\n### Teste de Normalidade\n\nUsamos a função `shapiro.test()`, que testa a normalidade dos dados em cada grupo. Para mais detalhes sobre normalidade, veja nos tópicos acima.\n\n```{r}\n#Teste de normalidade\nshapiro.test(escala2$Unaided)\nshapiro.test(escala2$Aided1)\n```\n\nSegundo o teste de normalidade de Shapiro-Wilk, a variável *Unaided* não segue uma distribuição normal (p-valor \\< 0.05), enquanto a variável *Aided1* apresentou normalidade (p-valor \\> 0.05).\n\n### Histograma\n\nA função `hist()` cria histogramas para visualizar a distribuição dos dados.\n\n```{r}\n#Histograma\nhist(escala2$Unaided)\nhist(escala2$Aided1)\n```\n\nObservando os plots dos histogramas, ambas as variáveis *Unaided* e *Aided*, não possuem uma distribuição normal. Apesar da variável *Aided1* ter apresentado normalidade (p-valor \\> 0.05) pelo teste de Shapiro-Wilk. Em experimentos, costuma-se considerar os testes em detrimento dos gráficos.\n\n### Teste de Homogeneidade de Variância\n\nA função `var.test()` compara as variâncias dos dois grupos.\n\n```{r}\n#Teste de homogêneidade de variância\nvar.test(escala2$Unaided, escala2$Aided1) #Se a variância não for homogênea tem que informar, var.equal = FALSE\n#qqplot(escala2$control, escala2$Aided1)\n```\n\nPara o nosso exemplo, utilizamos o teste F para comparação de duas variâncias, que apresentou um p-valor \\< 0.05, ou seja, rejeita-se H0 e aceita-se H1, as variâncias não apresentam homogeneidade pelo teste F a 5% de probabilidade.\n\n### Relatório\n\nComo já mencionado, o R possui o pacote `report`, que por sua vez possui a função `report()`, que faz um sumário do teste armazenado em um objeto. No nosso exemplo:\n\n```{r}\nreport(teste2)\n```\n\n### Teste Não Paramétrico\n\nQuando os dados não atendem aos pressupostos do teste t (normalidade e homogeneidade de variância), pode-se usar uma alternativa não paramétrica, como o teste de Wilcoxon que é um teste equivalente ao teste t, mas não assume uma distribuição normal dos dados.\n\nPara isso, utilizamos a função `wilcox.test()`, uma função nativa do R. Esta função realiza o teste de Wilcoxon, entretanto a a necessidade de colocar o parametro *paired = TRUE* para amostras pareadas.\n\n```{r}\nteste3 <- wilcox.test(escala2$Aided1,\n            escala2$Unaided,\n            paired = TRUE) #Lembrar que é dado pareado, logo paired = TRUE\nteste3\n```\n\n## Teste f para Três ou Mais Grupos\n\nPara comparar três ou mais grupos, utiliza-se o teste f através da ANOVA (Análise de Variância), que verifica se há diferenças significativas entre as médias de mais de dois grupos.\n\n### Importação e Visualização\n\nSempre inciamos importando os dados, para maiores informações sobre como importar os dados, verifique o tópico específico. O mesmo é valido para o boxplot.\n\n```{r}\nmicelial = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827\")\n\nmicelial |> \n  ggplot(aes(especie, tcm))+\n  geom_boxplot()+\n  theme_bw()\n```\n\nAnálisando o box-plot, ao menos dois tratamentos diferem das demais, *Fasi* e *Fgra*. Entretanto, é necessário que sejam feitos testes para saber realmente há diferença e se seguem os pressupostos de normalidade e homogeneidade.\n\n### Realizando ANOVA\n\nPara realizarmos a ANOVA, podemos usar a função `aov()` ou `lm()`. Neste exemplo usaremos a função `lm()`, que cria um modelo linear que relaciona a variável de interesse (`tcm`) com os grupos (`especie`). Ao colocarmos *espécie -1* já é calculada a média da estimativa.\n\nA função `anova()` realiza a análise de variância (ANOVA), que compara as médias de três ou mais grupos para determinar se há diferenças significativas.\n\n```{r}\nm1 <- lm(tcm ~ especie -1, data = micelial)\nanova(m1)\nshapiro.test(m1$residuals)\nbartlett.test(tcm ~ especie, data = micelial)\n```\n\nSegundo os testes de Shapiro-Wilk, e Bartelett os dados apresentam normalidade e homogeneidade de variância, respectivamente, a 5% de probailidade (p-valor \\> 0.05). Segundo a ANOVA, ao menos uma das médias difere das demais pelo teste F ao nível de 5% de probabilidade (p-valor \\> 0.05).\n\n#### Análise do Modelo\n\nA função `summary()` fornece um resumo estatístico do modelo linear, incluindo coeficientes, erros padrão, valores t e p-valores.\n\n```{r}\nsummary(m1)\n```\n\nOs resultados indicam que todas as espécies têm médias estimadas de *`tcm`* significativamente diferentes de zero (p \\< 0.001 para todas). O modelo ajustado explica 99.1% da variabilidade total dos dados (`R-squared` = 0.991).\n\nA ANOVA sugere que há diferenças significativas nas médias de `tcm` entre as espécies (p \\< 2.2e-16). O modelo apresenta um bom ajuste com um erro padrão residual baixo (0.1368) e coeficientes altamente significativos.\n\n### Comparação das Médias\n\nPara comparar as médias dos grupos, usamos o pacote `emmeans`. Este pacote calcula as estimativas marginais dos efeitos e facilita a comparação entre os grupos.\n\nO pacote `multcomp` é utilizado para realizar comparações múltiplas entre as médias dos grupos. A função `cld()` gera diferenciadores compactos que indicam quais médias são significativamente diferentes entre si.\n\n```{r}\nlibrary(emmeans)\nmedias1 <- emmeans(m1, ~ especie)\nmedias1\n\nlibrary(multcomp)\nlibrary(multcompView)\ncld(medias1)\n```\n\nSegundo a tabela acima foram formados 3 grupos, a espécie *Fgra* diferenciou-se das demais com menor *tcm*, enquanto *Faus*, *Fcor* e *Fmer* formaram outro grupo, entretanto *Fmer* e *Fasi* não diferiram entre si, formando um grupo.\n\n### Diagnóstico do Modelo\n\nUtilizamos o pacote `DHARMa` para gerar gráficos de resíduos simulados e verificar a adequação do modelo. Este pacote possui a função `simulateResiduals()`, que simula resíduos para verificar a adequação do modelo. A exibição é realizada pela função `plot()`, que plota os resíduos simulados para diagnóstico visual.\n\n```{r}\nlibrary(DHARMa)\nplot(simulateResiduals(m1))\n```\n\nOs gráficos de resíduos fornecidos pelo pacote `DHARMa` ajudam a diagnosticar possíveis problemas com o modelo. O gráfico de quantil-quantil (*QQ plot*) compara os resíduos observados com os esperados sob uma distribuição normal.\n\nAinda no gráfico, os pontos devem estar próximos da linha diagonal. Se estiverem, isso indica que os resíduos são aproximadamente normais. No gráfico do exemplo, os pontos seguem de perto a linha, indicando que os resíduos são aproximadamente normais.\n\nO gráfico *Residuals vs. Predicted* mostra os resíduos plotados contra os valores preditos. Uma distribuição aleatória dos pontos ao redor da linha horizontal (em zero) sugere que não há padrões sistemáticos nos resíduos.\n\nNo gráfico do exemplo, os pontos estão bem distribuídos, sugerindo que não há problemas significativos de heteroscedasticidade ou não-linearidade.\n\nAlém disso, o pacote DHARMa fornece análise de normalidade e homogeneidade e plota junto ao seu respectivo gráfico.\n\nApós, verificamos os pressupostos do modelo com o pacote `performance`. A função `check_normality()` verifica a normalidade dos resíduos, `check_heteroscedasticity()` verifica a presença de heteroscedasticidade e a função `check_model()` realiza verificações abrangentes do modelo, incluindo normalidade, heteroscedasticidade e outros diagnósticos.\n\n```{r}\nlibrary(performance)\ncheck_normality(m1)\ncheck_heteroscedasticity(m1)\ncheck_model(m1)\n```\n\nO gráfico*Posterior Predictive Check* compara a densidade dos dados observados com as densidades preditas pelo modelo. As linhas azuis representam as predições do modelo e a linha verde representa os dados observados. Se as linhas preditas (azuis) estiverem próximas à linha dos dados observados (verde), isso sugere que o modelo se ajusta bem aos dados. No gráfico do exemplo, as linhas azuis estão próximas à linha verde, indicando um bom ajuste do modelo.\n\nO gráfico *Linearity* (Linearidade) exibe resíduos padronizados versus valores ajustados. A linha de referência deve ser plana e horizontal e os pontos devem estar distribuídos aleatoriamente ao redor da linha horizontal. No gráfico do exemplo, os pontos parecem estar distribuídos aleatoriamente, indicando que o pressuposto de linearidade é atendido.\n\nO gráfico *Homogeneity of Varianc*e (Homoscedasticidade) exibe os resíduos padronizados versus valores ajustados. A linha de referência também deve ser plana e horizontal e os resíduos devem ter variância constante em todos os níveis de valores ajustados. No gráfico do exemplo, os pontos estão distribuídos de maneira uniforme ao redor da linha, indicando homoscedasticidade.\n\nO gráfico *Normality of Residuals* (Normalidade dos Resíduos) exibe o *QQ plot* dos resíduos padronizados. Os pontos devem estar alinhados ao longo da linha diagonal, se os pontos seguem a linha diagonal, isso indica que os resíduos são normalmente distribuídos. No gráfico do exemplo, os pontos estão relativamente alinhados à linha, indicando que os resíduos são aproximadamente normais.\n\nPor fim, o gráfico *Influential Observations* (Observações Influentes) exibe os resíduos padronizados versus leverage (hi). As observações devem estar dentro das linhas de contorno, este gráfico ajuda a identificar observações que têm uma influência desproporcional no ajuste do modelo. No gráfico do exemplo, a maioria dos pontos está dentro das linhas de contorno, indicando que não há observações influentes significativas.\n\n#### Conclusão\n\nOs gráficos de diagnóstico do exemplo indicam que o modelo ajustado atende aos pressupostos necessários para uma análise de regressão válida:\n\n1.  **Linearidade**: O pressuposto de linearidade é atendido, pois os resíduos são distribuídos aleatoriamente ao redor da linha horizontal.\n\n2.  **Homoscedasticidade**: A variância dos resíduos é constante, conforme indicado pela distribuição uniforme dos pontos.\n\n3.  **Normalidade dos Resíduos**: Os resíduos são aproximadamente normais, conforme indicado pelo QQ plot.\n\n4.  **Observações Influentes**: Não há observações influentes significativas que possam distorcer os resultados do modelo.\n\nEsses resultados sugerem que o modelo é bem ajustado e que as inferências feitas a partir dele são confiáveis.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"aula_06.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":"cosmo","title":"Análise Estatística: Estatística inferencial - Parte 1","author":"Gabriel A. D. Serafini"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}