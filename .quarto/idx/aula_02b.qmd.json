{"title":"Importando e Manipulando dados","markdown":{"yaml":{"title":"Importando e Manipulando dados","author":"Gabriel A. D. Serafini","format":"html","editor":"visual"},"headingText":"^Importando Datasets^","containsRefs":false,"markdown":"\n\n\nA importação de dados é um passo crucial na análise de dados, pois permite que você traga informações de várias fontes para dentro do ambiente R, onde podem ser limpas, manipuladas e analisadas. Com R, você pode importar dados de diversos formatos, como CSV, Excel, e até mesmo planilhas online do Google Sheets. Utilizar pacotes específicos para cada tipo de arquivo garante que os dados sejam lidos de maneira eficiente e sem erros.\n\n## Importando Dados de Pacotes\n\nMuitas vezes, com o intuito de que o usuário possa testar algumas funções dos pacotes, estes pacotes possuem conjuntos de dados que podem ser importados ou carregados e utilizados.\n\nA título de ensino, vamos começar com a instalação e carregamento do pacote `ec50estimator`, que é utilizado para estimativas de EC50 em análises biológicas. Neste pacote, utilizaremos o conjunto de dados `multi_isolate`.\n\n```{r}\nlibrary(ec50estimator)\nhead(multi_isolate)\n```\n\nPodemos atribuir os dados a um objeto, neste caso ao objeto `df1` e usaremos a função `View(df1)` para abrir uma nova aba exibindo os dados. `View()` é particularmente útil para uma inspeção rápida dos dados em uma interface tabular.\n\n```{r}\ndf1 <- multi_isolate\nView(df1)\n```\n\n## Leitura e Importação de Dados de Arquivos Excel\n\nOutra opção é a importação de arquivos existentes no próprio computador do usuário, como arquivos de dados em Excel. Para a leitura e importação de dados em Excel, utilizaremos o pacote `readxl`, e para isso é necessário que instale e carregue este pacote.\n\nO pacote `readxl`, que permite a leitura de arquivos Excel (.xlsx). Este pacote é especialmente útil para importar dados que são frequentemente armazenados em planilhas.\n\nPara ler um arquivo Excel na pasta do projeto, use o comando `read_excel(\"nome_do_arquivo.xlsx\")`, caso o arquivo esteja em outra pasta é necessário colocar, dentro dos parênteses, o caminho do arquivo antes do nome.\n\nSe você precisar abrir uma planilha específica, como \"escala\", utilize o argumento `sheet`. O segundo argumento é um parâmetro opcional, podendo ser o nome da aba ou apenas o número da aba sem aspas.\n\n```{r}\nlibrary(readxl)\ndf2 <- read_excel(\"dados-diversos.xlsx\")\ndf21 <- read_excel(\"dados-diversos.xlsx\", sheet = \"escala\")\n#Outras formas de abri e/ou atribuir abas específicas\n#df21 <- read_excel(\"dados-diversos.xlsx\", \"escala\")\n#df21 <- read_excel(\"dados-diversos.xlsx\", 2)\n```\n\n## Leitura e Importação de Dados de Arquivos CSV\n\nOutra opção, para arquivos CSV, é a utilização do pacote `tidyverse`, uma coleção de pacotes R para ciência de dados, incluindo `readr` para leitura de arquivos CSV. O `tidyverse` simplifica e uniformiza várias operações de manipulação de dados.\n\nNeste caso utilizamos a função ``` read_csv``(\"nome_do_arquivo.xlsx\") ```, lembrando que, caso o arquivo esteja em outra pasta é necessário colocar o caminho do arquivo antes do nome.\n\n```{r}\nlibrary(tidyverse)\ndf3 <- read_csv(\"dados-diversos.csv\")\n```\n\n## Leitura e Importação de Dados de Arquivos do Drive Utilizando Google Sheets\n\nAtualmente a utilização de drives em nuvem para salvar bancos de dados está amplamente difundida Isso é devido a facilidade de acesso aos dados, que pode ser feita de qualquer dispositivo, desde que se tenha acesso a internet.\n\nPara utilizar um banco de dados diretamente do Google Drive, por exemplo, pode-se utilizar os pacotes `gsheet` e `googlesheets4`. O pacote `gsheet` permite a leitura rápida de Google Sheets usando URLs, enquanto o `googlesheets4` oferece funcionalidade mais abrangente para leitura e escrita em Google Sheets.\n\nNo caso do pacote `gsheet`, a função utilizada para abrir e importar dados de arquivos no Google Drive é o ``` gsheet2tbl(``\"link_do_arquivo\") ```.\n\n```{r}\nlibrary(gsheet)\ndf4 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\ndf41 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?usp=drive_link&ouid=104144100918915406194&rtpof=true&sd=true\", sheetid = \"3\")\n```\n\nPara o pacote `googlesheets4`, o nome da função é ``` read_sheet``(\"link_do_arquivo\") ```. Ele permite não somente baixar, mas ele permite também escrever nos arquivos.\n\n`library(googlesheets4) df5 <- read_sheet(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing\")`\n\n## Visualização de Dados\n\nPara criar gráficos para análise exploratória das variáveis, utilizaremos o `ggplot2`, um dos pacotes mais populares do R para visualização de dados. A função `geom_point` mostra os pontos de uma variável, mas pode ocorrer destes pontos estarem sobrepostos, assim pode-se utilizar a função `geom_jitter` para desagregar os pontos.\n\nPodemos adicionar camadas com o operador `+`, como `geom_boxplot`. A ordem das camadas determina como elas serão exibidas: a primeira camada chamada fica na parte inferior e as subsequentes são empilhadas acima.\n\nPara evitar duplicação de outliers, utilize `outlier.colour = NA`.\n\nTemas específicos também podem ser aplicados, como `theme_bw()` para um visual preto e branco utilizado em artigos cientificos, ou `theme_classic`.\n\n```{r}\nlibrary(ggplot2)\ng1 <- df4 |>\n  ggplot(aes(trat, comp))+\n  geom_point(color = \"red\", shape = 2, size = 3)\ng1 + theme_classic()+\n  labs(x = \"Tratamento\", #Label do eixo x\n       y = \"Comprimento\", #Label do eixo y\n       title = \"Meu primeiro ggplot\", #Adiciona título ao gráfico\n       caption = \"Fonte: Dados diversos\") #Adiciona fonte ao gráfico\n\ng2 <- df4 |>\n  ggplot(aes(trat, comp))+\n  geom_boxplot(outlier.colour = NA,\n               fill = \"green\")+\n  geom_jitter(width = 0.05,\n              color = \"blue\",\n              shape = 3,\n              size = 2)\ng2 + theme_bw() +\n  #ylim(0,20) #Outra opção para a função abaixo\n  scale_y_continuous(limits = c(0,20),\n                     n.breaks = 5) #n.breaks é o número de quebras, se colocar breaks apenas, fica só a linha correspondente aquele número.\n```\n\nApós a criação do gráfico, através do pacote `ggplot2`, podemos salvar os gráficos utilizando a função `ggsave`. A função `ggsave` é usada para salvar gráficos criados com `ggplot2` em diferentes formatos de arquivo, como PNG, PDF, JPEG, entre outros. Isso é útil para documentar visualizações, compartilhar resultados ou incluir gráficos em relatórios e apresentações.\n\n```{r}\nggsave(\"plot1.png\", bg = \"white\") #O parâmetro \"bg\" é a cor de fundo ou \"background\"\n```\n\nEntendendo esses passos, você será capaz de importar dados de diversas fontes, realizar manipulações e criar visualizações ricas utilizando R e seus pacotes associados. Cada pacote desempenha um papel crucial na simplificação e eficiência das suas tarefas de análise de dados.\n","srcMarkdownNoYaml":"\n\n# ^Importando Datasets^\n\nA importação de dados é um passo crucial na análise de dados, pois permite que você traga informações de várias fontes para dentro do ambiente R, onde podem ser limpas, manipuladas e analisadas. Com R, você pode importar dados de diversos formatos, como CSV, Excel, e até mesmo planilhas online do Google Sheets. Utilizar pacotes específicos para cada tipo de arquivo garante que os dados sejam lidos de maneira eficiente e sem erros.\n\n## Importando Dados de Pacotes\n\nMuitas vezes, com o intuito de que o usuário possa testar algumas funções dos pacotes, estes pacotes possuem conjuntos de dados que podem ser importados ou carregados e utilizados.\n\nA título de ensino, vamos começar com a instalação e carregamento do pacote `ec50estimator`, que é utilizado para estimativas de EC50 em análises biológicas. Neste pacote, utilizaremos o conjunto de dados `multi_isolate`.\n\n```{r}\nlibrary(ec50estimator)\nhead(multi_isolate)\n```\n\nPodemos atribuir os dados a um objeto, neste caso ao objeto `df1` e usaremos a função `View(df1)` para abrir uma nova aba exibindo os dados. `View()` é particularmente útil para uma inspeção rápida dos dados em uma interface tabular.\n\n```{r}\ndf1 <- multi_isolate\nView(df1)\n```\n\n## Leitura e Importação de Dados de Arquivos Excel\n\nOutra opção é a importação de arquivos existentes no próprio computador do usuário, como arquivos de dados em Excel. Para a leitura e importação de dados em Excel, utilizaremos o pacote `readxl`, e para isso é necessário que instale e carregue este pacote.\n\nO pacote `readxl`, que permite a leitura de arquivos Excel (.xlsx). Este pacote é especialmente útil para importar dados que são frequentemente armazenados em planilhas.\n\nPara ler um arquivo Excel na pasta do projeto, use o comando `read_excel(\"nome_do_arquivo.xlsx\")`, caso o arquivo esteja em outra pasta é necessário colocar, dentro dos parênteses, o caminho do arquivo antes do nome.\n\nSe você precisar abrir uma planilha específica, como \"escala\", utilize o argumento `sheet`. O segundo argumento é um parâmetro opcional, podendo ser o nome da aba ou apenas o número da aba sem aspas.\n\n```{r}\nlibrary(readxl)\ndf2 <- read_excel(\"dados-diversos.xlsx\")\ndf21 <- read_excel(\"dados-diversos.xlsx\", sheet = \"escala\")\n#Outras formas de abri e/ou atribuir abas específicas\n#df21 <- read_excel(\"dados-diversos.xlsx\", \"escala\")\n#df21 <- read_excel(\"dados-diversos.xlsx\", 2)\n```\n\n## Leitura e Importação de Dados de Arquivos CSV\n\nOutra opção, para arquivos CSV, é a utilização do pacote `tidyverse`, uma coleção de pacotes R para ciência de dados, incluindo `readr` para leitura de arquivos CSV. O `tidyverse` simplifica e uniformiza várias operações de manipulação de dados.\n\nNeste caso utilizamos a função ``` read_csv``(\"nome_do_arquivo.xlsx\") ```, lembrando que, caso o arquivo esteja em outra pasta é necessário colocar o caminho do arquivo antes do nome.\n\n```{r}\nlibrary(tidyverse)\ndf3 <- read_csv(\"dados-diversos.csv\")\n```\n\n## Leitura e Importação de Dados de Arquivos do Drive Utilizando Google Sheets\n\nAtualmente a utilização de drives em nuvem para salvar bancos de dados está amplamente difundida Isso é devido a facilidade de acesso aos dados, que pode ser feita de qualquer dispositivo, desde que se tenha acesso a internet.\n\nPara utilizar um banco de dados diretamente do Google Drive, por exemplo, pode-se utilizar os pacotes `gsheet` e `googlesheets4`. O pacote `gsheet` permite a leitura rápida de Google Sheets usando URLs, enquanto o `googlesheets4` oferece funcionalidade mais abrangente para leitura e escrita em Google Sheets.\n\nNo caso do pacote `gsheet`, a função utilizada para abrir e importar dados de arquivos no Google Drive é o ``` gsheet2tbl(``\"link_do_arquivo\") ```.\n\n```{r}\nlibrary(gsheet)\ndf4 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\ndf41 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?usp=drive_link&ouid=104144100918915406194&rtpof=true&sd=true\", sheetid = \"3\")\n```\n\nPara o pacote `googlesheets4`, o nome da função é ``` read_sheet``(\"link_do_arquivo\") ```. Ele permite não somente baixar, mas ele permite também escrever nos arquivos.\n\n`library(googlesheets4) df5 <- read_sheet(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing\")`\n\n## Visualização de Dados\n\nPara criar gráficos para análise exploratória das variáveis, utilizaremos o `ggplot2`, um dos pacotes mais populares do R para visualização de dados. A função `geom_point` mostra os pontos de uma variável, mas pode ocorrer destes pontos estarem sobrepostos, assim pode-se utilizar a função `geom_jitter` para desagregar os pontos.\n\nPodemos adicionar camadas com o operador `+`, como `geom_boxplot`. A ordem das camadas determina como elas serão exibidas: a primeira camada chamada fica na parte inferior e as subsequentes são empilhadas acima.\n\nPara evitar duplicação de outliers, utilize `outlier.colour = NA`.\n\nTemas específicos também podem ser aplicados, como `theme_bw()` para um visual preto e branco utilizado em artigos cientificos, ou `theme_classic`.\n\n```{r}\nlibrary(ggplot2)\ng1 <- df4 |>\n  ggplot(aes(trat, comp))+\n  geom_point(color = \"red\", shape = 2, size = 3)\ng1 + theme_classic()+\n  labs(x = \"Tratamento\", #Label do eixo x\n       y = \"Comprimento\", #Label do eixo y\n       title = \"Meu primeiro ggplot\", #Adiciona título ao gráfico\n       caption = \"Fonte: Dados diversos\") #Adiciona fonte ao gráfico\n\ng2 <- df4 |>\n  ggplot(aes(trat, comp))+\n  geom_boxplot(outlier.colour = NA,\n               fill = \"green\")+\n  geom_jitter(width = 0.05,\n              color = \"blue\",\n              shape = 3,\n              size = 2)\ng2 + theme_bw() +\n  #ylim(0,20) #Outra opção para a função abaixo\n  scale_y_continuous(limits = c(0,20),\n                     n.breaks = 5) #n.breaks é o número de quebras, se colocar breaks apenas, fica só a linha correspondente aquele número.\n```\n\nApós a criação do gráfico, através do pacote `ggplot2`, podemos salvar os gráficos utilizando a função `ggsave`. A função `ggsave` é usada para salvar gráficos criados com `ggplot2` em diferentes formatos de arquivo, como PNG, PDF, JPEG, entre outros. Isso é útil para documentar visualizações, compartilhar resultados ou incluir gráficos em relatórios e apresentações.\n\n```{r}\nggsave(\"plot1.png\", bg = \"white\") #O parâmetro \"bg\" é a cor de fundo ou \"background\"\n```\n\nEntendendo esses passos, você será capaz de importar dados de diversas fontes, realizar manipulações e criar visualizações ricas utilizando R e seus pacotes associados. Cada pacote desempenha um papel crucial na simplificação e eficiência das suas tarefas de análise de dados.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"aula_02b.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":{"light":"pulse"},"title":"Importando e Manipulando dados","author":"Gabriel A. D. Serafini"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}