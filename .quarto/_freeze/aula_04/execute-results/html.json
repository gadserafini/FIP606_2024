{
  "hash": "09f04fc91be5175778248acc1249d22a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualização de dados, outras abordagens\"\nauthor: \"Gabriel A. D. Serafini\"\nformat: html\neditor: visual\nwarming: false\nmenssage: false\n---\n\n\n# Visualização de Dados: Outras Opções para Importação e Visualização de Dados\n\nA visualização de dados é essencial para entender e comunicar padrões e insights, existindo inúmeras possíbilidades de importação de dados. Agora iremos explorar outras técnicas e pacotes no R que facilitam a importação e visualização de datasets.\n\n## Importando Datasets\n\nUma das formas é a concatenação de dados de forma manual os atribuindo a um objeto. Para isso podemos utilizar a função nativa `c()` que concatena os dados, separados por vírgula.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncomp <- c(\"9\", \"12.5\", \"10\", \"8\", \"13.2\", \"11\", \"10.8\", \"9.5\", \"10.8\", \"10.4\", \"13.72\", \"15.91\", \"15.7\", \"14.2\", \"15.9\", \"16.54\", \"18\", \"14.4\", \"16.41\", \"16\")\ncomp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"9\"     \"12.5\"  \"10\"    \"8\"     \"13.2\"  \"11\"    \"10.8\"  \"9.5\"   \"10.8\" \n[10] \"10.4\"  \"13.72\" \"15.91\" \"15.7\"  \"14.2\"  \"15.9\"  \"16.54\" \"18\"    \"14.4\" \n[19] \"16.41\" \"16\"   \n```\n\n\n:::\n\n```{.r .cell-code}\ncomp <- c(9, 12.5, 10, 8, 13.2, 11, 10.8, 9.5, 10.8, 10.4, 13.72, 15.91, 15.7, 14.2, 15.9, 16.54, 18, 14.4, 16.41, 16)\ncomp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  9.00 12.50 10.00  8.00 13.20 11.00 10.80  9.50 10.80 10.40 13.72 15.91\n[13] 15.70 14.20 15.90 16.54 18.00 14.40 16.41 16.00\n```\n\n\n:::\n:::\n\n\nTambém podemos utilizar o pacote `datapasta`, que permite copiar dados de qualquer lugar e colar diretamente no R como uma tibble.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datapasta)\nvisitas <- tibble::tribble(\n             ~`codigo`,          ~país, ~`n2`,\n             1L,     \"Brazil\",      4303L,\n               2L,     \"Mozambique\",      43L,\n               3L,       \"Portugal\",      33L,\n               4L,  \"United States\",      23L,\n               5L,         \"Angola\",      19L,\n               6L,          \"Spain\",      16L,\n               7L,      \"(not set)\",      12L,\n               8L,       \"Colombia\",       8L,\n               9L,        \"Germany\",       5L,\n              10L,        \"Hungary\",       5L,\n              11L, \"United Kingdom\",       5L,\n              12L,    \"Netherlands\",       4L,\n              13L,        \"Ecuador\",       3L,\n              14L,         \"France\",       3L,\n              15L,          \"Chile\",       2L,\n              16L,       \"Paraguay\",       2L,\n              17L,           \"Peru\",       2L,\n              18L,      \"Argentina\",       1L,\n              19L,        \"Austria\",       1L,\n              20L,        \"Bolivia\",       1L,\n              21L,     \"Cape Verde\",       1L,\n              22L,          \"China\",       1L,\n              23L,          \"Egypt\",       1L,\n              24L,        \"Finland\",       1L,\n              25L,          \"India\",       1L,\n              26L,          \"Italy\",       1L,\n              27L,       \"Malaysia\",       1L,\n              28L,       \"Pakistan\",       1L,\n              29L,         \"Poland\",       1L,\n              30L,      \"Singapore\",       1L,\n              31L,    \"Timor-Leste\",       1L,\n              32L,        \"Uruguay\",       1L\n             )\nhead(visitas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  codigo país             n2\n   <int> <chr>         <int>\n1      1 Brazil         4303\n2      2 Mozambique       43\n3      3 Portugal         33\n4      4 United States    23\n5      5 Angola           19\n6      6 Spain            16\n```\n\n\n:::\n:::\n\n\n## Instalando pacotes de outros repositórios\n\nO pacote `pak` permite que os dados sejam baixados de outros repositórios. Para isso, inicialmente precisamos instalar o pacote.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"pak\")\n```\n:::\n\n\nAgora, poderemos instalar pacotes de outros repositórios, como o `Icens`, que será utilizado em outros tópicos. Muitos destes pacotes contem datasets que podem ser utilizados para testes de funções.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#pak::pkg_install(\"Icens\")\n```\n:::\n\n\nTambém podemos baixar os pacortes diretamente do github, como o pacote do Prof. Emerson, `r4pde` através do caminho \"emdelponte/r4pde\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#pak::pkg_install(\"emdelponte/r4pde\")\n```\n:::\n\n\n## Transformando Formatos com `tidyverse`\n\nVocê pode transformar dados de formato largo para formato longo (e vice-versa) usando `tidyverse`. Para isso vamos praticar utilizando a função `tribble`, para colarmos os dados do caopítulo **10.4** do livro [**r4pde**](https://r4pde.net/temporal-fitting).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\npepper <- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  ) \n```\n:::\n\n\n### Adiconando anotações em um gráfico\n\nNo `ggplot2`, `annotate` é uma função usada para adicionar anotações diretamente a um gráfico. Anotações podem ser texto, formas ou outras marcas visuais que ajudam a destacar ou explicar partes específicas do gráfico.\n\nA função `annotate` permite que você adicione elementos como texto, segmentos, retângulos e outros tipos de geometrias ao seu gráfico. Isso é útil para chamar a atenção para pontos específicos, adicionar rótulos personalizados ou destacar áreas de interesse.\n\nAproveitando o exemplo anterior, podemos inserir textos no gráfico fornecendo as coordenadas dos textos no mapa. Por exemplo, podemos adicionar os valores dos tratamentos para cada curva:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\npepper |> \n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\") |> \n  ggplot(aes(t, inc, color = epidemic))+\n  geom_point()+\n  geom_line()+\n  annotate(geom = \"text\", x = 12, y = 0.75, label = \"1\")+\n  annotate(geom = \"text\", x = 25, y = 0.75, label = \"2\")+\n  annotate(geom = \"text\", x = 45, y = 0.75, label = \"3\")+\n  theme(legend.position = \"none\") #retirar a legenda para não ficar redundante\n```\n\n::: {.cell-output-display}\n![](aula_04_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Tabelas de Contingência com `janitor`\n\nAs tabelas de contingência permitem cruzar variáveis e observar suas interações. O pacote `janitor` facilita a criação dessas tabelas.\n\nPor exemplo a função `count` conta quantas observações existem na variável e exibe em uma tabela, podemos filtrar colocando mais variáveis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 405 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): region, zone, district, cultivar, shade, cropping_system, farm_mana...\ndbl (6): farm, lon, lat, altitude, inc, sev2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ncr |> \n  count(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  region zone             n\n  <chr>  <chr>        <int>\n1 Oromia Bale            30\n2 Oromia Ilu AbaBora     45\n3 Oromia Jimma           45\n4 Oromia West Wellega    45\n5 SNNPR  Bench Maji      45\n6 SNNPR  Gedio           45\n7 SNNPR  Keffa           45\n8 SNNPR  Sheka           45\n9 SNNPR  Sidama          60\n```\n\n\n:::\n:::\n\n\nPodemos cruzar as variáveis usando a função de contingência `tabyl` para cruzarmos duas variáveis, como por exemplo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'janitor'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nOs seguintes objetos são mascarados por 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\ncr |> \n  tabyl(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n region Bale Bench Maji Gedio Ilu AbaBora Jimma Keffa Sheka Sidama West Wellega\n Oromia   30          0     0          45    45     0     0      0           45\n  SNNPR    0         45    45           0     0    45    45     60            0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  tabyl(zone, region)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         zone Oromia SNNPR\n         Bale     30     0\n   Bench Maji      0    45\n        Gedio      0    45\n  Ilu AbaBora     45     0\n        Jimma     45     0\n        Keffa      0    45\n        Sheka      0    45\n       Sidama      0    60\n West Wellega     45     0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  tabyl(cultivar, region)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n cultivar Oromia SNNPR\n Improved     23    60\n    Local     50    66\n  Mixture     92   114\n```\n\n\n:::\n:::\n\n\nEsse artifício é interessante para obervações, como por exemplo, podemos observar abaixo que na cultivar melhorada só se trabalha com manejo intensivo enquanto que a cultivar local não se tem manejo, ou ele é minimo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  tabyl(cultivar, farm_management)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n cultivar Intensive Minimal Moderate Unmanaged\n Improved        83       0        0         0\n    Local         0      10        4       102\n  Mixture        82      59       65         0\n```\n\n\n:::\n:::\n\n\n## Visualizando Dados com Gráficos\n\n### Empilhamento de Colunas\n\nPodemos empilhar colunas e visualizar a distribuição de categorias, para isso podemos utilizar o `geom_col`, como no exemplo abaixo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  count(farm_management, cultivar) |> \n  ggplot(aes(cultivar, n, fill = farm_management))+\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](aula_04_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### Colunas Separadas\n\nPara visualizar colunas separadas, podemos utilizar `position = \"dodge2\"`, assim as colunas podem ser separadas por cultivares como nos exemplos abaixo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  count(farm_management, cultivar) |> \n  ggplot(aes(cultivar, n, fill = farm_management))+\n  geom_col(position = \"dodge2\")\n```\n\n::: {.cell-output-display}\n![](aula_04_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggthemes)\ncr |> \n  count(farm_management, cultivar) |> \n  ggplot(aes(cultivar, n, fill = farm_management))+\n  geom_col(position = \"dodge2\")+\n  scale_fill_calc()+\n  theme_bw()+\n  theme(strip.text.x = element_blank(),\n        legend.position = \"top\")+ #Tira o nome em cima\n  #geom_text(position = position_dodge(width = 0.9))+\n  facet_wrap(~cultivar, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](aula_04_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "aula_04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}