{
  "hash": "7c09432c06c9cd1b8a38a792f2c2d6cc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Análise Estatística: Estatística inferencial - Parte 3\"\nauthor: \"Gabriel A D Serafini\"\nformat: html\neditor: visual\n---\n\n\n# ANOVA - DBC\n\n## Delineamento em Blocos Casualisados\n\nHoje iremos trabalhar com Delineamento Blocos Casualisados (DBC)\n\nPara trabalhar com blocos casualizados vamos tratar os Tratamentos e os Blocos como fatores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gsheet)\nsoja <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\nsoja <- soja |> \n  mutate(TRAT = as.factor(TRAT),\n         BLOCO = as.factor(BLOCO))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n```\n:::\n\n\nVamos plotar as os gráficos para observar se há diferença entre os tratamentos. Colocamos a média e o intervalo de confiança, o bootstrap aprende a média e o intervalo de confiança. #FALTOU PLOTAR OS DEMAIS#\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfc <- soja |> \n  ggplot(aes(TRAT, DFC ))+\n  geom_jitter(width = 0.05, color = \"gray70\")+\n  stat_summary(fun.data = \"mean_cl_boot\", size =0.5, color = \"black\", alpha = 0.5)\ndfc\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfer <- soja |> \n  ggplot(aes(TRAT, FER ))+\n  geom_jitter(width = 0.05, color = \"gray70\")+\n  stat_summary(fun.data = \"mean_cl_boot\", size =0.5, color = \"black\", alpha = 0.5)\nfer\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\nprod <- soja |> \n  ggplot(aes(TRAT, PROD ))+\n  geom_jitter(width = 0.05, color = \"gray70\")+\n  stat_summary(fun.data = \"mean_cl_boot\", size =0.5, color = \"black\", alpha = 0.5)\nprod\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#library(r4pde)\nlibrary(patchwork)\n(dfc | fer | prod)\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n:::\n\n\nAnova DBC\n\nMesmo não tendo efeito de bloco, deixa-se pois o experimento foi delineado em Blocos Casualisados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov_dfc <- lm(DFC ~ TRAT + BLOCO,\n              data = soja)\nanova(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: DFC\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 149.299 21.3284 51.5490 8.218e-12 ***\nBLOCO      3   0.461  0.1537  0.3716    0.7743    \nResiduals 21   8.689  0.4138                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(performance)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'performance' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: Error variance appears to be homoscedastic (p = 0.532).\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: residuals appear as normally distributed (p = 0.978).\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'emmeans' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n```\n\n\n:::\n\n```{.r .cell-code}\nmedias_dfc <- emmeans(aov_dfc, ~TRAT)\nmedias_dfc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean    SE df lower.CL upper.CL\n 1     10.88 0.322 21    10.21    11.54\n 2      6.42 0.322 21     5.76     7.09\n 3      6.05 0.322 21     5.38     6.72\n 4      4.75 0.322 21     4.08     5.42\n 5      4.20 0.322 21     3.53     4.87\n 6      4.00 0.322 21     3.33     4.67\n 7      4.08 0.322 21     3.41     4.74\n 8      4.58 0.322 21     3.91     5.24\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n\n\n:::\n\n```{.r .cell-code}\npwpm(medias_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        1       2       3       4       5       6       7       8\n1 [10.87]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2   4.450 [ 6.42]  0.9896  0.0249  0.0017  0.0006  0.0009  0.0107\n3   4.825   0.375 [ 6.05]  0.1329  0.0107  0.0040  0.0058  0.0628\n4   6.125   1.675   1.300 [ 4.75]  0.9202  0.7173  0.8072  0.9999\n5   6.675   2.225   1.850   0.550 [ 4.20]  0.9998  1.0000  0.9896\n6   6.875   2.425   2.050   0.750   0.200 [ 4.00]  1.0000  0.9020\n7   6.800   2.350   1.975   0.675   0.125  -0.075 [ 4.07]  0.9499\n8   6.300   1.850   1.475   0.175  -0.375  -0.575  -0.500 [ 4.57]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: mvtnorm\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: survival\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'survival' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: TH.data\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: MASS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'MASS' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'MASS'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nO seguinte objeto é mascarado por 'package:patchwork':\n\n    area\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    select\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'TH.data'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nO seguinte objeto é mascarado por 'package:MASS':\n\n    geyser\n```\n\n\n:::\n\n```{.r .cell-code}\ncld(medias_dfc, Letters = LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean    SE df lower.CL upper.CL .group\n 6      4.00 0.322 21     3.33     4.67  A    \n 7      4.08 0.322 21     3.41     4.74  A    \n 5      4.20 0.322 21     3.53     4.87  A    \n 8      4.58 0.322 21     3.91     5.24  AB   \n 4      4.75 0.322 21     4.08     5.42  AB   \n 3      6.05 0.322 21     5.38     6.72   BC  \n 2      6.42 0.322 21     5.76     7.09    C  \n 1     10.88 0.322 21    10.21    11.54     D \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\nFERRUGEM\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov_fer <- lm(FER ~ TRAT + BLOCO,\n              data = soja)\nanova(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: FER\n          Df Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 978.87 139.838 55.1717 4.218e-12 ***\nBLOCO      3   3.84   1.279  0.5045    0.6834    \nResiduals 21  53.23   2.535                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p < .001).\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWarning: Non-normality of residuals detected (p = 0.008).\n```\n\n\n:::\n\n```{.r .cell-code}\n#Transforação\n\nlibrary(DHARMa)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'DHARMa' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThis is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(simulateResiduals(aov_fer))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.25, log(sigma) = -3.082978 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.25, log(sigma) = -3.153964 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.25, log(sigma) = -3.330674 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.25, log(sigma) = -3.25367 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.25, log(sigma) = -3.254842 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.25, log(sigma) = -3.25509 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.25, log(sigma) = -3.254964 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -2.678463 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -2.88072 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -3.005722 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -3.130724 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -3.160233 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -3.913208 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -3.91919 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nqu = 0.75, log(sigma) = -3.918346 : outer Newton did not converge fully.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_fer <- emmeans(aov_fer, ~TRAT, type = \"response\")\nmedias_fer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean    SE df lower.CL upper.CL\n 1     20.25 0.796 21    18.59    21.91\n 2      5.88 0.796 21     4.22     7.53\n 3      4.00 0.796 21     2.34     5.66\n 4      3.12 0.796 21     1.47     4.78\n 5      3.25 0.796 21     1.59     4.91\n 6      3.00 0.796 21     1.34     4.66\n 7      3.38 0.796 21     1.72     5.03\n 8      3.50 0.796 21     1.84     5.16\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n\n\n:::\n\n```{.r .cell-code}\npwpm(medias_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        1       2       3       4       5       6       7       8\n1 [20.25]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2  14.375 [ 5.87]  0.7076  0.2722  0.3229  0.2273  0.3792  0.4404\n3  16.250   1.875 [ 4.00]  0.9926  0.9971  0.9840  0.9991  0.9998\n4  17.125   2.750   0.875 [ 3.12]  1.0000  1.0000  1.0000  1.0000\n5  17.000   2.625   0.750  -0.125 [ 3.25]  1.0000  1.0000  1.0000\n6  17.250   2.875   1.000   0.125   0.250 [ 3.00]  1.0000  0.9998\n7  16.875   2.500   0.625  -0.250  -0.125  -0.375 [ 3.37]  1.0000\n8  16.750   2.375   0.500  -0.375  -0.250  -0.500  -0.125 [ 3.50]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean)   type = \"response\"\nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\ncld(medias_fer, Letters = LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean    SE df lower.CL upper.CL .group\n 6      3.00 0.796 21     1.34     4.66  A    \n 4      3.12 0.796 21     1.47     4.78  A    \n 5      3.25 0.796 21     1.59     4.91  A    \n 7      3.38 0.796 21     1.72     5.03  A    \n 8      3.50 0.796 21     1.84     5.16  A    \n 3      4.00 0.796 21     2.34     5.66  A    \n 2      5.88 0.796 21     4.22     7.53  A    \n 1     20.25 0.796 21    18.59    21.91   B   \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\nTransformação Box-Cox\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- boxcox(lm(soja$FER ~1))\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlambda <- b$x[which.max(b$y)]\nlambda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1.555556\n```\n\n\n:::\n\n```{.r .cell-code}\nsoja$FER2 <-(soja$FER ^lambda -1)/lambda\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naov_fer2 <- lm(FER2 ~ TRAT + BLOCO,\n              data = soja)\nanova(aov_fer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: FER2\n          Df   Sum Sq   Mean Sq F value    Pr(>F)    \nTRAT       7 0.041641 0.0059488 12.9020 2.436e-06 ***\nBLOCO      3 0.005895 0.0019649  4.2616   0.01687 *  \nResiduals 21 0.009683 0.0004611                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_fer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: Error variance appears to be homoscedastic (p = 0.872).\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: residuals appear as normally distributed (p = 0.787).\n```\n\n\n:::\n\n```{.r .cell-code}\n#Transforação\n\nlibrary(DHARMa)\nplot(simulateResiduals(aov_fer2))\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_fer2 <- emmeans(aov_fer2, ~TRAT, type = \"response\")\nmedias_fer2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean     SE df lower.CL upper.CL\n 1     0.637 0.0107 21    0.614    0.659\n 2     0.596 0.0107 21    0.574    0.618\n 3     0.553 0.0107 21    0.530    0.575\n 4     0.527 0.0107 21    0.505    0.550\n 5     0.539 0.0107 21    0.517    0.561\n 6     0.523 0.0107 21    0.501    0.545\n 7     0.545 0.0107 21    0.523    0.567\n 8     0.549 0.0107 21    0.527    0.572\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n\n\n:::\n\n```{.r .cell-code}\npwpm(medias_fer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         1        2        3        4        5        6        7       8\n1  [0.637]   0.1857   0.0004   <.0001   <.0001   <.0001   0.0001  0.0002\n2  0.04058  [0.596]   0.1358   0.0039   0.0208   0.0020   0.0497  0.0880\n3  0.08380  0.04322  [0.553]   0.7032   0.9807   0.5313   0.9995  1.0000\n4  0.10920  0.06862  0.02540  [0.527]   0.9938   1.0000   0.9339  0.8261\n5  0.09775  0.05717  0.01395 -0.01145  [0.539]   0.9629   0.9999  0.9964\n6  0.11349  0.07292  0.02970  0.00429  0.01575  [0.523]   0.8261  0.6703\n7  0.09154  0.05097  0.00775 -0.01766 -0.00620 -0.02195  [0.545]  1.0000\n8  0.08725  0.04667  0.00345 -0.02195 -0.01050 -0.02624 -0.00429 [0.549]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean)   type = \"response\"\nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\ncld(medias_fer2, Letters = LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean     SE df lower.CL upper.CL .group\n 6     0.523 0.0107 21    0.501    0.545  A    \n 4     0.527 0.0107 21    0.505    0.550  A    \n 5     0.539 0.0107 21    0.517    0.561  A    \n 7     0.545 0.0107 21    0.523    0.567  A    \n 8     0.549 0.0107 21    0.527    0.572  AB   \n 3     0.553 0.0107 21    0.530    0.575  AB   \n 2     0.596 0.0107 21    0.574    0.618   BC  \n 1     0.637 0.0107 21    0.614    0.659    C  \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\nPRODUTIVIDADE\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov_prod <- lm(PROD ~ TRAT + BLOCO,\n              data = soja)\nanova(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: PROD\n          Df  Sum Sq Mean Sq F value  Pr(>F)  \nTRAT       7 2993906  427701  2.6367 0.04021 *\nBLOCO      3  105665   35222  0.2171 0.88340  \nResiduals 21 3406431  162211                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: Error variance appears to be homoscedastic (p = 0.215).\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: residuals appear as normally distributed (p = 0.542).\n```\n\n\n:::\n\n```{.r .cell-code}\n#Transforação\n\n\nlibrary(emmeans)\nmedias_prod <- emmeans(aov_prod, ~TRAT)\nmedias_prod\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n\n\n:::\n\n```{.r .cell-code}\npwpm(medias_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.3  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.3  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.3    31.7    62.0    43.7   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\ncld(medias_prod, Letters = LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean  SE df lower.CL upper.CL .group\n 1      4219 201 21     3800     4638  A    \n 2      4935 201 21     4516     5354  AB   \n 8      5078 201 21     4659     5497  AB   \n 3      5110 201 21     4691     5529  AB   \n 5      5122 201 21     4703     5541  AB   \n 7      5128 201 21     4709     5546  AB   \n 4      5140 201 21     4721     5559  AB   \n 6      5256 201 21     4837     5675   B   \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n\n```{.r .cell-code}\nmedias_prod_grupo<- cld(medias_prod, Letters = LETTERS)\n```\n:::\n\n\nPlot dos rerultados - Uma tabela ficaria melhor\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_prod <- data.frame(medias_prod_grupo)\ndf_prod |> \n  ggplot(aes(TRAT, emmean))+\n  geom_point()+\n  ylim(3000,6500)+\n  geom_errorbar(aes(min = lower.CL, \n                    max = upper.CL),\n                width = 0.1)+\n  annotate(geom = \"text\", x = 1.2, y = 4200,\n           label = \"A\")\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nknitr::kable(df_prod |> dplyr::select(TRAT, emmean, .group))\n```\n\n::: {.cell-output-display}\n\n\n|   |TRAT |  emmean|.group |\n|:--|:----|-------:|:------|\n|1  |1    | 4219.25|A      |\n|2  |2    | 4935.00|AB     |\n|8  |8    | 5078.25|AB     |\n|3  |3    | 5110.00|AB     |\n|5  |5    | 5122.00|AB     |\n|7  |7    | 5127.50|AB     |\n|4  |4    | 5140.25|AB     |\n|6  |6    | 5256.25|B      |\n\n\n:::\n\n```{.r .cell-code}\nlibrary(writexl)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'writexl' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_xlsx(df_prod, \"df.xlsx\")\n```\n:::\n\n\nDADOS IRRIGAÇÃO\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gsheet)\ncurve <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve |> \n  ggplot(aes(x= day, y= severity, color = Irrigation, shape = Irrigation))+\n  geom_line()+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](aula_08_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(epifitter)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'epifitter' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\ncurve2 <- curve |>\n  group_by(Irrigation, rep) |> \n  summarise(aacpd = AUDPC(day, severity)) #não está dando certo rever\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nm_curve <- lm(aacpd ~ Irrigation + factor(rep),\n              data = curve2)\n\nanova(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: aacpd\n            Df  Sum Sq  Mean Sq F value  Pr(>F)  \nIrrigation   1 0.23602 0.236017  10.605 0.08275 .\nfactor(rep)  2 0.61291 0.306454  13.771 0.06770 .\nResiduals    2 0.04451 0.022254                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(agricolae)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'agricolae' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\ncv.model(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.097572\n```\n\n\n:::\n:::\n\n\nEficacia de controle, quanto foi reduzido do tratamento com maior valor em porcentagem. (***Dá para usar para o café ao invés de AACPD***)\n",
    "supporting": [
      "aula_08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}